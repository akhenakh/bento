"use strict";(self.webpackChunkbento=self.webpackChunkbento||[]).push([[9538],{6802:function(e,n,r){r.r(n),r.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return c},metadata:function(){return i},toc:function(){return u}});var t=r(5893),a=r(1151),s=r(4866),o=r(5162);const c={title:"cache",slug:"cache",type:"processor",status:"stable",categories:["Integration"],name:"cache"},l=void 0,i={id:"components/processors/cache",title:"cache",description:"\x3c!--",source:"@site/docs/components/processors/cache.md",sourceDirName:"components/processors",slug:"/components/processors/cache",permalink:"/bento/docs/components/processors/cache",draft:!1,unlisted:!1,editUrl:"https://github.com/warpstreamlabs/bento/edit/main/website/docs/components/processors/cache.md",tags:[],version:"current",frontMatter:{title:"cache",slug:"cache",type:"processor",status:"stable",categories:["Integration"],name:"cache"},sidebar:"docs",previous:{title:"branch",permalink:"/bento/docs/components/processors/branch"},next:{title:"cached",permalink:"/bento/docs/components/processors/cached"}},d={},u=[{value:"Examples",id:"examples",level:2},{value:"Fields",id:"fields",level:2},{value:"<code>resource</code>",id:"resource",level:3},{value:"<code>operator</code>",id:"operator",level:3},{value:"<code>key</code>",id:"key",level:3},{value:"<code>value</code>",id:"value",level:3},{value:"<code>ttl</code>",id:"ttl",level:3},{value:"Operators",id:"operators",level:2},{value:"<code>set</code>",id:"set",level:3},{value:"<code>add</code>",id:"add",level:3},{value:"<code>get</code>",id:"get",level:3},{value:"<code>delete</code>",id:"delete",level:3}];function h(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Performs operations against a ",(0,t.jsx)(n.a,{href:"/docs/components/caches/about",children:"cache resource"})," for each message, allowing you to store or retrieve data within message payloads."]}),"\n",(0,t.jsxs)(s.Z,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],children:[(0,t.jsx)(o.Z,{value:"common",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:'# Common config fields, showing default values\nlabel: ""\ncache:\n  resource: "" # No default (required)\n  operator: "" # No default (required)\n  key: "" # No default (required)\n  value: "" # No default (optional)\n'})})}),(0,t.jsx)(o.Z,{value:"advanced",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:'# All config fields, showing default values\nlabel: ""\ncache:\n  resource: "" # No default (required)\n  operator: "" # No default (required)\n  key: "" # No default (required)\n  value: "" # No default (optional)\n  ttl: 60s # No default (optional)\n'})})})]}),"\n",(0,t.jsxs)(n.p,{children:["For use cases where you wish to cache the result of processors consider using the ",(0,t.jsxs)(n.a,{href:"/docs/components/processors/cached",children:[(0,t.jsx)(n.code,{children:"cached"})," processor"]})," instead."]}),"\n",(0,t.jsxs)(n.p,{children:["This processor will interpolate functions within the ",(0,t.jsx)(n.code,{children:"key"})," and ",(0,t.jsx)(n.code,{children:"value"})," fields individually for each message. This allows you to specify dynamic keys and values based on the contents of the message payloads and metadata. You can find a list of functions ",(0,t.jsx)(n.a,{href:"/docs/configuration/interpolation#bloblang-queries",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(s.Z,{defaultValue:"Deduplication",values:[{label:"Deduplication",value:"Deduplication"},{label:"Deduplication Batch-Wide",value:"Deduplication Batch-Wide"},{label:"Hydration",value:"Hydration"}],children:[(0,t.jsxs)(o.Z,{value:"Deduplication",children:[(0,t.jsxs)(n.p,{children:["Deduplication can be done using the add operator with a key extracted from the message payload, since it fails when a key already exists we can remove the duplicates using a ",(0,t.jsxs)(n.a,{href:"/docs/components/processors/mapping",children:[(0,t.jsx)(n.code,{children:"mapping"})," processor"]}),":"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'pipeline:\n  processors:\n    - cache:\n        resource: foocache\n        operator: add\n        key: \'${! json("message.id") }\'\n        value: "storeme"\n    - mapping: root = if errored() { deleted() }\n\ncache_resources:\n  - label: foocache\n    redis:\n      url: tcp://TODO:6379\n'})})]}),(0,t.jsxs)(o.Z,{value:"Deduplication Batch-Wide",children:[(0,t.jsxs)(n.p,{children:["Sometimes it's necessary to deduplicate a batch of messages (AKA a window) by a single identifying value. This can be done by introducing a ",(0,t.jsxs)(n.a,{href:"/docs/components/processors/branch",children:[(0,t.jsx)(n.code,{children:"branch"})," processor"]}),", which executes the cache only once on behalf of the batch, in this case with a value make from a field extracted from the first and last messages of the batch:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'pipeline:\n  processors:\n    # Try and add one message to a cache that identifies the whole batch\n    - branch:\n        request_map: |\n          root = if batch_index() == 0 {\n            json("id").from(0) + json("meta.tail_id").from(-1)\n          } else { deleted() }\n        processors:\n          - cache:\n              resource: foocache\n              operator: add\n              key: ${! content() }\n              value: t\n    # Delete all messages if we failed\n    - mapping: |\n        root = if errored().from(0) {\n          deleted()\n        }\n'})})]}),(0,t.jsxs)(o.Z,{value:"Hydration",children:[(0,t.jsxs)(n.p,{children:["It's possible to enrich payloads with content previously stored in a cache by using the ",(0,t.jsx)(n.a,{href:"/docs/components/processors/branch",children:(0,t.jsx)(n.code,{children:"branch"})})," processor:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"pipeline:\n  processors:\n    - branch:\n        processors:\n          - cache:\n              resource: foocache\n              operator: get\n              key: '${! json(\"message.document_id\") }'\n        result_map: 'root.message.document = this'\n\n        # NOTE: If the data stored in the cache is not valid JSON then use\n        # something like this instead:\n        # result_map: 'root.message.document = content().string()'\n\ncache_resources:\n  - label: foocache\n    memcached:\n      addresses: [ \"TODO:11211\" ]\n"})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,t.jsx)(n.h3,{id:"resource",children:(0,t.jsx)(n.code,{children:"resource"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsxs)(n.a,{href:"/docs/components/caches/about",children:[(0,t.jsx)(n.code,{children:"cache"})," resource"]})," to target with this processor."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsx)(n.h3,{id:"operator",children:(0,t.jsx)(n.code,{children:"operator"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"#operators",children:"operation"})," to perform with the cache."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"}),(0,t.jsx)(n.br,{}),"\n","Options: ",(0,t.jsx)(n.code,{children:"set"}),", ",(0,t.jsx)(n.code,{children:"add"}),", ",(0,t.jsx)(n.code,{children:"get"}),", ",(0,t.jsx)(n.code,{children:"delete"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"key",children:(0,t.jsx)(n.code,{children:"key"})}),"\n",(0,t.jsxs)(n.p,{children:["A key to use with the cache.\nThis field supports ",(0,t.jsx)(n.a,{href:"/docs/configuration/interpolation#bloblang-queries",children:"interpolation functions"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsx)(n.h3,{id:"value",children:(0,t.jsx)(n.code,{children:"value"})}),"\n",(0,t.jsxs)(n.p,{children:["A value to use with the cache (when applicable).\nThis field supports ",(0,t.jsx)(n.a,{href:"/docs/configuration/interpolation#bloblang-queries",children:"interpolation functions"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsx)(n.h3,{id:"ttl",children:(0,t.jsx)(n.code,{children:"ttl"})}),"\n",(0,t.jsxs)(n.p,{children:["The TTL of each individual item as a duration string. After this period an item will be eligible for removal during the next compaction. Not all caches support per-key TTLs, those that do will have a configuration field ",(0,t.jsx)(n.code,{children:"default_ttl"}),", and those that do not will fall back to their generally configured TTL setting.\nThis field supports ",(0,t.jsx)(n.a,{href:"/docs/configuration/interpolation#bloblang-queries",children:"interpolation functions"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"}),(0,t.jsx)(n.br,{}),"\n","Requires version 3.33.0 or newer"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:"# Examples\n\nttl: 60s\n\nttl: 5m\n\nttl: 36h\n"})}),"\n",(0,t.jsx)(n.h2,{id:"operators",children:"Operators"}),"\n",(0,t.jsx)(n.h3,{id:"set",children:(0,t.jsx)(n.code,{children:"set"})}),"\n",(0,t.jsx)(n.p,{children:"Set a key in the cache to a value. If the key already exists the contents are\noverridden."}),"\n",(0,t.jsx)(n.h3,{id:"add",children:(0,t.jsx)(n.code,{children:"add"})}),"\n",(0,t.jsxs)(n.p,{children:["Set a key in the cache to a value. If the key already exists the action fails\nwith a 'key already exists' error, which can be detected with\n",(0,t.jsx)(n.a,{href:"/docs/configuration/error_handling",children:"processor error handling"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"get",children:(0,t.jsx)(n.code,{children:"get"})}),"\n",(0,t.jsxs)(n.p,{children:["Retrieve the contents of a cached key and replace the original message payload\nwith the result. If the key does not exist the action fails with an error, which\ncan be detected with ",(0,t.jsx)(n.a,{href:"/docs/configuration/error_handling",children:"processor error handling"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"delete",children:(0,t.jsx)(n.code,{children:"delete"})}),"\n",(0,t.jsx)(n.p,{children:"Delete a key and its contents from the cache.  If the key does not exist the\naction is a no-op and will not fail with an error."})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},5162:function(e,n,r){r.d(n,{Z:function(){return o}});r(7294);var t=r(6010),a={tabItem:"tabItem_Ymn6"},s=r(5893);function o(e){let{children:n,hidden:r,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)(a.tabItem,o),hidden:r,children:n})}},4866:function(e,n,r){r.d(n,{Z:function(){return w}});var t=r(7294),a=r(6010),s=r(2466),o=r(6550),c=r(469),l=r(1980),i=r(7392),d=r(12);function u(e){var n,r;return null!=(n=null==(r=t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:r.filter(Boolean))?n:[]}function h(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}(r);return function(e){const n=(0,i.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,r])}function p(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:r}=e;const a=(0,o.k6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:n,groupId:r});return[(0,l._X)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function m(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,s=h(e),[o,l]=(0,t.useState)((()=>function(e){var n;let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:t}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+r+'" but none of its children has the corresponding value. Available values are: '+t.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return r}const a=null!=(n=t.find((e=>e.default)))?n:t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[i,u]=f({queryString:r,groupId:a}),[m,x]=function(e){let{groupId:n}=e;const r=function(e){return e?"docusaurus.tab."+e:null}(n),[a,s]=(0,d.Nk)(r);return[a,(0,t.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:a}),b=(()=>{const e=null!=i?i:m;return p({value:e,tabValues:s})?e:null})();(0,c.Z)((()=>{b&&l(b)}),[b]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error("Can't select invalid tab value="+e);l(e),u(e),x(e)}),[u,x,s]),tabValues:s}}var x=r(2389),b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},v=r(5893);function g(e){let{className:n,block:r,selectedValue:t,selectValue:o,tabValues:c}=e;const l=[],{blockElementScrollPositionUntilNextRender:i}=(0,s.o5)(),d=e=>{const n=e.currentTarget,r=l.indexOf(n),a=c[r].value;a!==t&&(i(n),o(a))},u=e=>{var n;let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var t;const n=l.indexOf(e.currentTarget)+1;r=null!=(t=l[n])?t:l[0];break}case"ArrowLeft":{var a;const n=l.indexOf(e.currentTarget)-1;r=null!=(a=l[n])?a:l[l.length-1];break}}null==(n=r)||n.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},n),children:c.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...s,className:(0,a.Z)("tabs__item",b.tabItem,null==s?void 0:s.className,{"tabs__item--active":t===n}),children:null!=r?r:n},n)}))})}function j(e){let{lazy:n,children:r,selectedValue:a}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=m(e);return(0,v.jsxs)("div",{className:(0,a.Z)("tabs-container",b.tabList),children:[(0,v.jsx)(g,{...e,...n}),(0,v.jsx)(j,{...e,...n})]})}function w(e){const n=(0,x.Z)();return(0,v.jsx)(y,{...e,children:u(e.children)},String(n))}},1151:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return o}});var t=r(7294);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);