"use strict";(self.webpackChunkbento=self.webpackChunkbento||[]).push([[9738],{29301:function(e,n,s){s.r(n),s.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return u}});var t=s(85893),r=s(11151),i=s(74866),o=s(85162);const a={title:"sql_raw",slug:"sql_raw",type:"input",status:"beta",categories:["Services"],name:"sql_raw"},l=void 0,c={id:"components/inputs/sql_raw",title:"sql_raw",description:"\x3c!--",source:"@site/docs/components/inputs/sql_raw.md",sourceDirName:"components/inputs",slug:"/components/inputs/sql_raw",permalink:"/docs/components/inputs/sql_raw",draft:!1,unlisted:!1,editUrl:"https://github.com/warpstreamlabs/bento/edit/main/website/docs/components/inputs/sql_raw.md",tags:[],version:"current",frontMatter:{title:"sql_raw",slug:"sql_raw",type:"input",status:"beta",categories:["Services"],name:"sql_raw"},sidebar:"docs",previous:{title:"socket_server",permalink:"/docs/components/inputs/socket_server"},next:{title:"sql_select",permalink:"/docs/components/inputs/sql_select"}},d={},u=[{value:"Examples",id:"examples",level:2},{value:"Fields",id:"fields",level:2},{value:"<code>driver</code>",id:"driver",level:3},{value:"<code>dsn</code>",id:"dsn",level:3},{value:"Drivers",id:"drivers",level:4},{value:"<code>query</code>",id:"query",level:3},{value:"<code>args_mapping</code>",id:"args_mapping",level:3},{value:"<code>auto_replay_nacks</code>",id:"auto_replay_nacks",level:3},{value:"<code>init_files</code>",id:"init_files",level:3},{value:"<code>init_statement</code>",id:"init_statement",level:3},{value:"<code>conn_max_idle_time</code>",id:"conn_max_idle_time",level:3},{value:"<code>conn_max_life_time</code>",id:"conn_max_life_time",level:3},{value:"<code>conn_max_idle</code>",id:"conn_max_idle",level:3},{value:"<code>conn_max_open</code>",id:"conn_max_open",level:3}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{title:"BETA",type:"caution",children:(0,t.jsx)(n.p,{children:"This component is mostly stable but breaking changes could still be made outside of major version releases if a fundamental problem with the component is found."})}),"\n",(0,t.jsx)(n.p,{children:"Executes a select query and creates a message for each row received."}),"\n",(0,t.jsx)(n.p,{children:"Introduced in version 4.10.0."}),"\n",(0,t.jsxs)(i.Z,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],children:[(0,t.jsx)(o.Z,{value:"common",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:'# Common config fields, showing default values\ninput:\n  label: ""\n  sql_raw:\n    driver: "" # No default (required)\n    dsn: clickhouse://username:password@host1:9000,host2:9000/database?dial_timeout=200ms&max_execution_time=60 # No default (required)\n    query: SELECT * FROM footable WHERE user_id = $1; # No default (required)\n    args_mapping: root = [ this.cat.meow, this.doc.woofs[0] ] # No default (optional)\n    auto_replay_nacks: true\n'})})}),(0,t.jsx)(o.Z,{value:"advanced",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:'# All config fields, showing default values\ninput:\n  label: ""\n  sql_raw:\n    driver: "" # No default (required)\n    dsn: clickhouse://username:password@host1:9000,host2:9000/database?dial_timeout=200ms&max_execution_time=60 # No default (required)\n    query: SELECT * FROM footable WHERE user_id = $1; # No default (required)\n    args_mapping: root = [ this.cat.meow, this.doc.woofs[0] ] # No default (optional)\n    auto_replay_nacks: true\n    init_files: [] # No default (optional)\n    init_statement: | # No default (optional)\n      CREATE TABLE IF NOT EXISTS some_table (\n        foo varchar(50) not null,\n        bar integer,\n        baz varchar(50),\n        primary key (foo)\n      ) WITHOUT ROWID;\n    conn_max_idle_time: "" # No default (optional)\n    conn_max_life_time: "" # No default (optional)\n    conn_max_idle: 2\n    conn_max_open: 0 # No default (optional)\n'})})})]}),"\n",(0,t.jsxs)(n.p,{children:["Once the rows from the query are exhausted this input shuts down, allowing the pipeline to gracefully terminate (or the next input in a ",(0,t.jsx)(n.a,{href:"/docs/components/inputs/sequence",children:"sequence"})," to execute)."]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(i.Z,{defaultValue:"Consumes an SQL table using a query as an input.",values:[{label:"Consumes an SQL table using a query as an input.",value:"Consumes an SQL table using a query as an input."}],children:(0,t.jsxs)(o.Z,{value:"Consumes an SQL table using a query as an input.",children:[(0,t.jsx)(n.p,{children:"Here we preform an aggregate over a list of names in a table that are less than 3600 seconds old."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'input:\n  sql_raw:\n    driver: postgres\n    dsn: postgres://foouser:foopass@localhost:5432/testdb?sslmode=disable\n    query: "SELECT name, count(*) FROM person WHERE last_updated < $1 GROUP BY name;"\n    args_mapping: |\n      root = [\n        now().ts_unix() - 3600\n      ]\n'})})]})}),"\n",(0,t.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,t.jsx)(n.h3,{id:"driver",children:(0,t.jsx)(n.code,{children:"driver"})}),"\n",(0,t.jsxs)(n.p,{children:["A database ",(0,t.jsx)(n.a,{href:"#drivers",children:"driver"})," to use."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"}),(0,t.jsx)(n.br,{}),"\n","Options: ",(0,t.jsx)(n.code,{children:"mysql"}),", ",(0,t.jsx)(n.code,{children:"postgres"}),", ",(0,t.jsx)(n.code,{children:"clickhouse"}),", ",(0,t.jsx)(n.code,{children:"mssql"}),", ",(0,t.jsx)(n.code,{children:"sqlite"}),", ",(0,t.jsx)(n.code,{children:"oracle"}),", ",(0,t.jsx)(n.code,{children:"snowflake"}),", ",(0,t.jsx)(n.code,{children:"trino"}),", ",(0,t.jsx)(n.code,{children:"gocosmos"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"dsn",children:(0,t.jsx)(n.code,{children:"dsn"})}),"\n",(0,t.jsx)(n.p,{children:"A Data Source Name to identify the target database."}),"\n",(0,t.jsx)(n.h4,{id:"drivers",children:"Drivers"}),"\n",(0,t.jsx)(n.p,{children:"The following is a list of supported drivers, their placeholder style, and their respective DSN formats:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Driver"}),(0,t.jsx)(n.th,{children:"Data Source Name Format"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"clickhouse"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://github.com/ClickHouse/clickhouse-go#dsn",children:(0,t.jsx)(n.code,{children:"clickhouse://[username[:password]@][netloc][:port]/dbname[?param1=value1&...&paramN=valueN]"})})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"mysql"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"[username[:password]@][protocol[(address)]]/dbname[?param1=value1&...&paramN=valueN]"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"postgres"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"postgres://[user[:password]@][netloc][:port][/dbname][?param1=value1&...]"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"mssql"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sqlserver://[user[:password]@][netloc][:port][?database=dbname&param1=value1&...]"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sqlite"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"file:/path/to/filename.db[?param&=value1&...]"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"oracle"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"oracle://[username[:password]@][netloc][:port]/service_name?server=server2&server=server3"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"snowflake"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"username[:password]@account_identifier/dbname/schemaname[?param1=value&...&paramN=valueN]"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"trino"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://github.com/trinodb/trino-go-client#dsn-data-source-name",children:(0,t.jsx)(n.code,{children:"http[s]://user[:pass]@host[:port][?parameters]"})})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"gocosmos"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://pkg.go.dev/github.com/microsoft/gocosmos#readme-example-usage",children:(0,t.jsx)(n.code,{children:"AccountEndpoint=<cosmosdb-endpoint>;AccountKey=<cosmosdb-account-key>[;TimeoutMs=<timeout-in-ms>][;Version=<cosmosdb-api-version>][;DefaultDb/Db=<db-name>][;AutoId=<true/false>][;InsecureSkipVerify=<true/false>]"})})})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["Please note that the ",(0,t.jsx)(n.code,{children:"postgres"})," driver enforces SSL by default, you can override this with the parameter ",(0,t.jsx)(n.code,{children:"sslmode=disable"})," if required."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"snowflake"})," driver supports multiple DSN formats. Please consult ",(0,t.jsx)(n.a,{href:"https://pkg.go.dev/github.com/snowflakedb/gosnowflake#hdr-Connection_String",children:"the docs"})," for more details. For ",(0,t.jsx)(n.a,{href:"https://docs.snowflake.com/en/user-guide/key-pair-auth.html#configuring-key-pair-authentication",children:"key pair authentication"}),", the DSN has the following format: ",(0,t.jsx)(n.code,{children:"<snowflake_user>@<snowflake_account>/<db_name>/<schema_name>?warehouse=<warehouse>&role=<role>&authenticator=snowflake_jwt&privateKey=<base64_url_encoded_private_key>"}),", where the value for the ",(0,t.jsx)(n.code,{children:"privateKey"})," parameter can be constructed from an unencrypted RSA private key file ",(0,t.jsx)(n.code,{children:"rsa_key.p8"})," using ",(0,t.jsx)(n.code,{children:"openssl enc -d -base64 -in rsa_key.p8 | basenc --base64url -w0"})," (you can use ",(0,t.jsx)(n.code,{children:"gbasenc"})," insted of ",(0,t.jsx)(n.code,{children:"basenc"})," on OSX if you install ",(0,t.jsx)(n.code,{children:"coreutils"})," via Homebrew). If you have a password-encrypted private key, you can decrypt it using ",(0,t.jsx)(n.code,{children:"openssl pkcs8 -in rsa_key_encrypted.p8 -out rsa_key.p8"}),". Also, make sure fields such as the username are URL-encoded."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://pkg.go.dev/github.com/microsoft/gocosmos",children:(0,t.jsx)(n.code,{children:"gocosmos"})})," driver is still experimental, but it has support for ",(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/cosmos-db/hierarchical-partition-keys",children:"hierarchical partition keys"})," as well as ",(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/cosmos-db/nosql/how-to-query-container#cross-partition-query",children:"cross-partition queries"}),". Please refer to the ",(0,t.jsx)(n.a,{href:"https://github.com/microsoft/gocosmos/blob/main/SQL.md",children:"SQL notes"})," for details."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:"# Examples\n\ndsn: clickhouse://username:password@host1:9000,host2:9000/database?dial_timeout=200ms&max_execution_time=60\n\ndsn: foouser:foopassword@tcp(localhost:3306)/foodb\n\ndsn: postgres://foouser:foopass@localhost:5432/foodb?sslmode=disable\n\ndsn: oracle://foouser:foopass@localhost:1521/service_name\n"})}),"\n",(0,t.jsx)(n.h3,{id:"query",children:(0,t.jsx)(n.code,{children:"query"})}),"\n",(0,t.jsxs)(n.p,{children:["The query to execute. The style of placeholder to use depends on the driver, some drivers require question marks (",(0,t.jsx)(n.code,{children:"?"}),") whereas others expect incrementing dollar signs (",(0,t.jsx)(n.code,{children:"$1"}),", ",(0,t.jsx)(n.code,{children:"$2"}),", and so on) or colons (",(0,t.jsx)(n.code,{children:":1"}),", ",(0,t.jsx)(n.code,{children:":2"})," and so on). The style to use is outlined in this table:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Driver"}),(0,t.jsx)(n.th,{children:"Placeholder Style"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"clickhouse"})}),(0,t.jsx)(n.td,{children:"Dollar sign"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"mysql"})}),(0,t.jsx)(n.td,{children:"Question mark"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"postgres"})}),(0,t.jsx)(n.td,{children:"Dollar sign"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"mssql"})}),(0,t.jsx)(n.td,{children:"Question mark"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sqlite"})}),(0,t.jsx)(n.td,{children:"Question mark"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"oracle"})}),(0,t.jsx)(n.td,{children:"Colon"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"snowflake"})}),(0,t.jsx)(n.td,{children:"Question mark"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"trino"})}),(0,t.jsx)(n.td,{children:"Question mark"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"gocosmos"})}),(0,t.jsx)(n.td,{children:"Colon"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:"# Examples\n\nquery: SELECT * FROM footable WHERE user_id = $1;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"args_mapping",children:(0,t.jsx)(n.code,{children:"args_mapping"})}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.a,{href:"/docs/guides/bloblang/about",children:"Bloblang mapping"})," which should evaluate to an array of values matching in size to the number of columns specified."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:'# Examples\n\nargs_mapping: root = [ this.cat.meow, this.doc.woofs[0] ]\n\nargs_mapping: root = [ meta("user.id") ]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"auto_replay_nacks",children:(0,t.jsx)(n.code,{children:"auto_replay_nacks"})}),"\n",(0,t.jsxs)(n.p,{children:["Whether messages that are rejected (nacked) at the output level should be automatically replayed indefinitely, eventually resulting in back pressure if the cause of the rejections is persistent. If set to ",(0,t.jsx)(n.code,{children:"false"})," these messages will instead be deleted. Disabling auto replays can greatly improve memory efficiency of high throughput streams as the original shape of the data can be discarded immediately upon consumption and mutation."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"bool"}),(0,t.jsx)(n.br,{}),"\n","Default: ",(0,t.jsx)(n.code,{children:"true"})]}),"\n",(0,t.jsx)(n.h3,{id:"init_files",children:(0,t.jsx)(n.code,{children:"init_files"})}),"\n",(0,t.jsx)(n.p,{children:"An optional list of file paths containing SQL statements to execute immediately upon the first connection to the target database. This is a useful way to initialise tables before processing data. Glob patterns are supported, including super globs (double star)."}),"\n",(0,t.jsxs)(n.p,{children:["Care should be taken to ensure that the statements are idempotent, and therefore would not cause issues when run multiple times after service restarts. If both ",(0,t.jsx)(n.code,{children:"init_statement"})," and ",(0,t.jsx)(n.code,{children:"init_files"})," are specified the ",(0,t.jsx)(n.code,{children:"init_statement"})," is executed ",(0,t.jsx)(n.em,{children:"after"})," the ",(0,t.jsx)(n.code,{children:"init_files"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"If a statement fails for any reason a warning log will be emitted but the operation of this component will not be stopped."}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"array"}),(0,t.jsx)(n.br,{}),"\n","Requires version 4.10.0 or newer"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:"# Examples\n\ninit_files:\n  - ./init/*.sql\n\ninit_files:\n  - ./foo.sql\n  - ./bar.sql\n"})}),"\n",(0,t.jsx)(n.h3,{id:"init_statement",children:(0,t.jsx)(n.code,{children:"init_statement"})}),"\n",(0,t.jsx)(n.p,{children:"An optional SQL statement to execute immediately upon the first connection to the target database. This is a useful way to initialise tables before processing data. Care should be taken to ensure that the statement is idempotent, and therefore would not cause issues when run multiple times after service restarts."}),"\n",(0,t.jsxs)(n.p,{children:["If both ",(0,t.jsx)(n.code,{children:"init_statement"})," and ",(0,t.jsx)(n.code,{children:"init_files"})," are specified the ",(0,t.jsx)(n.code,{children:"init_statement"})," is executed ",(0,t.jsx)(n.em,{children:"after"})," the ",(0,t.jsx)(n.code,{children:"init_files"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"If the statement fails for any reason a warning log will be emitted but the operation of this component will not be stopped."}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"}),(0,t.jsx)(n.br,{}),"\n","Requires version 4.10.0 or newer"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:"# Examples\n\ninit_statement: |2\n  CREATE TABLE IF NOT EXISTS some_table (\n    foo varchar(50) not null,\n    bar integer,\n    baz varchar(50),\n    primary key (foo)\n  ) WITHOUT ROWID;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"conn_max_idle_time",children:(0,t.jsx)(n.code,{children:"conn_max_idle_time"})}),"\n",(0,t.jsxs)(n.p,{children:["An optional maximum amount of time a connection may be idle. Expired connections may be closed lazily before reuse. If ",(0,t.jsx)(n.code,{children:"value <= 0"}),", connections are not closed due to a connections idle time."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsx)(n.h3,{id:"conn_max_life_time",children:(0,t.jsx)(n.code,{children:"conn_max_life_time"})}),"\n",(0,t.jsxs)(n.p,{children:["An optional maximum amount of time a connection may be reused. Expired connections may be closed lazily before reuse. If ",(0,t.jsx)(n.code,{children:"value <= 0"}),", connections are not closed due to a connections age."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsx)(n.h3,{id:"conn_max_idle",children:(0,t.jsx)(n.code,{children:"conn_max_idle"})}),"\n",(0,t.jsxs)(n.p,{children:["An optional maximum number of connections in the idle connection pool. If conn_max_open is greater than 0 but less than the new conn_max_idle, then the new conn_max_idle will be reduced to match the conn_max_open limit. If ",(0,t.jsx)(n.code,{children:"value <= 0"}),", no idle connections are retained. The default max idle connections is currently 2. This may change in a future release."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"int"}),(0,t.jsx)(n.br,{}),"\n","Default: ",(0,t.jsx)(n.code,{children:"2"})]}),"\n",(0,t.jsx)(n.h3,{id:"conn_max_open",children:(0,t.jsx)(n.code,{children:"conn_max_open"})}),"\n",(0,t.jsxs)(n.p,{children:["An optional maximum number of open connections to the database. If conn_max_idle is greater than 0 and the new conn_max_open is less than conn_max_idle, then conn_max_idle will be reduced to match the new conn_max_open limit. If ",(0,t.jsx)(n.code,{children:"value <= 0"}),", then there is no limit on the number of open connections. The default is 0 (unlimited)."]}),"\n",(0,t.jsxs)(n.p,{children:["Type: ",(0,t.jsx)(n.code,{children:"int"})]})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},85162:function(e,n,s){s.d(n,{Z:function(){return o}});s(67294);var t=s(86010),r={tabItem:"tabItem_Ymn6"},i=s(85893);function o(e){let{children:n,hidden:s,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.Z)(r.tabItem,o),hidden:s,children:n})}},74866:function(e,n,s){s.d(n,{Z:function(){return y}});var t=s(67294),r=s(86010),i=s(12466),o=s(16550),a=s(20469),l=s(91980),c=s(67392),d=s(50012);function u(e){var n,s;return null!=(n=null==(s=t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:s.filter(Boolean))?n:[]}function h(e){const{values:n,children:s}=e;return(0,t.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:s,attributes:t,default:r}}=e;return{value:n,label:s,attributes:t,default:r}}))}(s);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,s])}function m(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:s}=e;const r=(0,o.k6)(),i=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=s?s:null}({queryString:n,groupId:s});return[(0,l._X)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function x(e){const{defaultValue:n,queryString:s=!1,groupId:r}=e,i=h(e),[o,l]=(0,t.useState)((()=>function(e){var n;let{defaultValue:s,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!m({value:s,tabValues:t}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+s+'" but none of its children has the corresponding value. Available values are: '+t.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return s}const r=null!=(n=t.find((e=>e.default)))?n:t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[c,u]=p({queryString:s,groupId:r}),[x,f]=function(e){let{groupId:n}=e;const s=function(e){return e?"docusaurus.tab."+e:null}(n),[r,i]=(0,d.Nk)(s);return[r,(0,t.useCallback)((e=>{s&&i.set(e)}),[s,i])]}({groupId:r}),j=(()=>{const e=null!=c?c:x;return m({value:e,tabValues:i})?e:null})();(0,a.Z)((()=>{j&&l(j)}),[j]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);l(e),u(e),f(e)}),[u,f,i]),tabValues:i}}var f=s(72389),j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},b=s(85893);function _(e){let{className:n,block:s,selectedValue:t,selectValue:o,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const n=e.currentTarget,s=l.indexOf(n),r=a[s].value;r!==t&&(c(n),o(r))},u=e=>{var n;let s=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var t;const n=l.indexOf(e.currentTarget)+1;s=null!=(t=l[n])?t:l[0];break}case"ArrowLeft":{var r;const n=l.indexOf(e.currentTarget)-1;s=null!=(r=l[n])?r:l[l.length-1];break}}null==(n=s)||n.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":s},n),children:a.map((e=>{let{value:n,label:s,attributes:i}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...i,className:(0,r.Z)("tabs__item",j.tabItem,null==i?void 0:i.className,{"tabs__item--active":t===n}),children:null!=s?s:n},n)}))})}function v(e){let{lazy:n,children:s,selectedValue:r}=e;const i=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function g(e){const n=x(e);return(0,b.jsxs)("div",{className:(0,r.Z)("tabs-container",j.tabList),children:[(0,b.jsx)(_,{...e,...n}),(0,b.jsx)(v,{...e,...n})]})}function y(e){const n=(0,f.Z)();return(0,b.jsx)(g,{...e,children:u(e.children)},String(n))}},11151:function(e,n,s){s.d(n,{Z:function(){return a},a:function(){return o}});var t=s(67294);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);