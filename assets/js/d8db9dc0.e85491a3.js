"use strict";(self.webpackChunkbento=self.webpackChunkbento||[]).push([[2448],{79841:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return r},metadata:function(){return l},toc:function(){return u}});var s=t(85893),o=t(11151),i=t(74866),c=t(85162);const r={title:"gcp_cloud_storage",slug:"gcp_cloud_storage",type:"output",status:"beta",categories:["Services","GCP"],name:"gcp_cloud_storage"},a=void 0,l={id:"components/outputs/gcp_cloud_storage",title:"gcp_cloud_storage",description:"\x3c!--",source:"@site/docs/components/outputs/gcp_cloud_storage.md",sourceDirName:"components/outputs",slug:"/components/outputs/gcp_cloud_storage",permalink:"/docs/components/outputs/gcp_cloud_storage",draft:!1,unlisted:!1,editUrl:"https://github.com/warpstreamlabs/bento/edit/main/website/docs/components/outputs/gcp_cloud_storage.md",tags:[],version:"current",frontMatter:{title:"gcp_cloud_storage",slug:"gcp_cloud_storage",type:"output",status:"beta",categories:["Services","GCP"],name:"gcp_cloud_storage"},sidebar:"docs",previous:{title:"gcp_bigquery",permalink:"/docs/components/outputs/gcp_bigquery"},next:{title:"gcp_pubsub",permalink:"/docs/components/outputs/gcp_pubsub"}},d={},u=[{value:"Metadata",id:"metadata",level:3},{value:"Credentials",id:"credentials",level:3},{value:"Batching",id:"batching",level:3},{value:"Performance",id:"performance",level:2},{value:"Fields",id:"fields",level:2},{value:"<code>bucket</code>",id:"bucket",level:3},{value:"<code>path</code>",id:"path",level:3},{value:"<code>content_type</code>",id:"content_type",level:3},{value:"<code>content_encoding</code>",id:"content_encoding",level:3},{value:"<code>collision_mode</code>",id:"collision_mode",level:3},{value:"<code>chunk_size</code>",id:"chunk_size",level:3},{value:"<code>timeout</code>",id:"timeout",level:3},{value:"<code>max_in_flight</code>",id:"max_in_flight",level:3},{value:"<code>batching</code>",id:"batching-1",level:3},{value:"<code>batching.count</code>",id:"batchingcount",level:3},{value:"<code>batching.byte_size</code>",id:"batchingbyte_size",level:3},{value:"<code>batching.period</code>",id:"batchingperiod",level:3},{value:"<code>batching.check</code>",id:"batchingcheck",level:3},{value:"<code>batching.processors</code>",id:"batchingprocessors",level:3}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{title:"BETA",type:"caution",children:(0,s.jsx)(n.p,{children:"This component is mostly stable but breaking changes could still be made outside of major version releases if a fundamental problem with the component is found."})}),"\n",(0,s.jsxs)(n.p,{children:["Sends message parts as objects to a Google Cloud Storage bucket. Each object is uploaded with the path specified with the ",(0,s.jsx)(n.code,{children:"path"})," field."]}),"\n",(0,s.jsx)(n.p,{children:"Introduced in version 3.43.0."}),"\n",(0,s.jsxs)(i.Z,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],children:[(0,s.jsx)(c.Z,{value:"common",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'# Common config fields, showing default values\noutput:\n  label: ""\n  gcp_cloud_storage:\n    bucket: "" # No default (required)\n    path: ${!count("files")}-${!timestamp_unix_nano()}.txt\n    content_type: application/octet-stream\n    collision_mode: overwrite\n    timeout: 3s\n    max_in_flight: 64\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n'})})}),(0,s.jsx)(c.Z,{value:"advanced",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'# All config fields, showing default values\noutput:\n  label: ""\n  gcp_cloud_storage:\n    bucket: "" # No default (required)\n    path: ${!count("files")}-${!timestamp_unix_nano()}.txt\n    content_type: application/octet-stream\n    content_encoding: ""\n    collision_mode: overwrite\n    chunk_size: 16777216\n    timeout: 3s\n    max_in_flight: 64\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n      processors: [] # No default (optional)\n'})})})]}),"\n",(0,s.jsxs)(n.p,{children:["In order to have a different path for each object you should use function interpolations described ",(0,s.jsx)(n.a,{href:"/docs/configuration/interpolation#bloblang-queries",children:"here"}),", which are calculated per message of a batch."]}),"\n",(0,s.jsx)(n.h3,{id:"metadata",children:"Metadata"}),"\n",(0,s.jsxs)(n.p,{children:["Metadata fields on messages will be sent as headers, in order to mutate these values (or remove them) check out the ",(0,s.jsx)(n.a,{href:"/docs/configuration/metadata",children:"metadata docs"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"credentials",children:"Credentials"}),"\n",(0,s.jsxs)(n.p,{children:["By default Bento will use a shared credentials file when connecting to GCP services. You can find out more ",(0,s.jsx)(n.a,{href:"/docs/guides/cloud/gcp",children:"in this document"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"batching",children:"Batching"}),"\n",(0,s.jsxs)(n.p,{children:["It's common to want to upload messages to Google Cloud Storage as batched archives, the easiest way to do this is to batch your messages at the output level and join the batch of messages with an ",(0,s.jsx)(n.a,{href:"/docs/components/processors/archive",children:(0,s.jsx)(n.code,{children:"archive"})})," and/or ",(0,s.jsx)(n.a,{href:"/docs/components/processors/compress",children:(0,s.jsx)(n.code,{children:"compress"})})," processor."]}),"\n",(0,s.jsx)(n.p,{children:"For example, if we wished to upload messages as a .tar.gz archive of documents we could achieve that with the following config:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'output:\n  gcp_cloud_storage:\n    bucket: TODO\n    path: ${!count("files")}-${!timestamp_unix_nano()}.tar.gz\n    batching:\n      count: 100\n      period: 10s\n      processors:\n        - archive:\n            format: tar\n        - compress:\n            algorithm: gzip\n'})}),"\n",(0,s.jsx)(n.p,{children:"Alternatively, if we wished to upload JSON documents as a single large document containing an array of objects we can do that with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'output:\n  gcp_cloud_storage:\n    bucket: TODO\n    path: ${!count("files")}-${!timestamp_unix_nano()}.json\n    batching:\n      count: 100\n      processors:\n        - archive:\n            format: json_array\n'})}),"\n",(0,s.jsx)(n.h2,{id:"performance",children:"Performance"}),"\n",(0,s.jsxs)(n.p,{children:["This output benefits from sending multiple messages in flight in parallel for improved performance. You can tune the max number of in flight messages (or message batches) with the field ",(0,s.jsx)(n.code,{children:"max_in_flight"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This output benefits from sending messages as a batch for improved performance. Batches can be formed at both the input and output level. You can find out more ",(0,s.jsx)(n.a,{href:"/docs/configuration/batching",children:"in this doc"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,s.jsx)(n.h3,{id:"bucket",children:(0,s.jsx)(n.code,{children:"bucket"})}),"\n",(0,s.jsx)(n.p,{children:"The bucket to upload messages to."}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsx)(n.h3,{id:"path",children:(0,s.jsx)(n.code,{children:"path"})}),"\n",(0,s.jsxs)(n.p,{children:["The path of each message to upload.\nThis field supports ",(0,s.jsx)(n.a,{href:"/docs/configuration/interpolation#bloblang-queries",children:"interpolation functions"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'"${!count(\\"files\\")}-${!timestamp_unix_nano()}.txt"'})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'# Examples\n\npath: ${!count("files")}-${!timestamp_unix_nano()}.txt\n\npath: ${!meta("kafka_key")}.json\n\npath: ${!json("doc.namespace")}/${!json("doc.id")}.json\n'})}),"\n",(0,s.jsx)(n.h3,{id:"content_type",children:(0,s.jsx)(n.code,{children:"content_type"})}),"\n",(0,s.jsxs)(n.p,{children:["The content type to set for each object.\nThis field supports ",(0,s.jsx)(n.a,{href:"/docs/configuration/interpolation#bloblang-queries",children:"interpolation functions"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'"application/octet-stream"'})]}),"\n",(0,s.jsx)(n.h3,{id:"content_encoding",children:(0,s.jsx)(n.code,{children:"content_encoding"})}),"\n",(0,s.jsxs)(n.p,{children:["An optional content encoding to set for each object.\nThis field supports ",(0,s.jsx)(n.a,{href:"/docs/configuration/interpolation#bloblang-queries",children:"interpolation functions"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'""'})]}),"\n",(0,s.jsx)(n.h3,{id:"collision_mode",children:(0,s.jsx)(n.code,{children:"collision_mode"})}),"\n",(0,s.jsx)(n.p,{children:"Determines how file path collisions should be dealt with."}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'"overwrite"'}),(0,s.jsx)(n.br,{}),"\n","Requires version 3.53.0 or newer"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Summary"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"append"})}),(0,s.jsx)(n.td,{children:"Append the message bytes to the original file."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"error-if-exists"})}),(0,s.jsx)(n.td,{children:"Return an error, this is the equivalent of a nack."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ignore"})}),(0,s.jsx)(n.td,{children:"Do not modify the original file, the new data will be dropped."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"overwrite"})}),(0,s.jsx)(n.td,{children:"Replace the existing file with the new one."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"chunk_size",children:(0,s.jsx)(n.code,{children:"chunk_size"})}),"\n",(0,s.jsx)(n.p,{children:"An optional chunk size which controls the maximum number of bytes of the object that the Writer will attempt to send to the server in a single request. If ChunkSize is set to zero, chunking will be disabled."}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"int"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:"16777216"})]}),"\n",(0,s.jsx)(n.h3,{id:"timeout",children:(0,s.jsx)(n.code,{children:"timeout"})}),"\n",(0,s.jsx)(n.p,{children:"The maximum period to wait on an upload before abandoning it and reattempting."}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'"3s"'})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"# Examples\n\ntimeout: 1s\n\ntimeout: 500ms\n"})}),"\n",(0,s.jsx)(n.h3,{id:"max_in_flight",children:(0,s.jsx)(n.code,{children:"max_in_flight"})}),"\n",(0,s.jsx)(n.p,{children:"The maximum number of message batches to have in flight at a given time. Increase this to improve throughput."}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"int"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:"64"})]}),"\n",(0,s.jsx)(n.h3,{id:"batching-1",children:(0,s.jsx)(n.code,{children:"batching"})}),"\n",(0,s.jsxs)(n.p,{children:["Allows you to configure a ",(0,s.jsx)(n.a,{href:"/docs/configuration/batching",children:"batching policy"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"object"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'# Examples\n\nbatching:\n  byte_size: 5000\n  count: 0\n  period: 1s\n\nbatching:\n  count: 10\n  period: 1s\n\nbatching:\n  check: this.contains("END BATCH")\n  count: 0\n  period: 1m\n'})}),"\n",(0,s.jsx)(n.h3,{id:"batchingcount",children:(0,s.jsx)(n.code,{children:"batching.count"})}),"\n",(0,s.jsxs)(n.p,{children:["A number of messages at which the batch should be flushed. If ",(0,s.jsx)(n.code,{children:"0"})," disables count based batching."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"int"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:"0"})]}),"\n",(0,s.jsx)(n.h3,{id:"batchingbyte_size",children:(0,s.jsx)(n.code,{children:"batching.byte_size"})}),"\n",(0,s.jsxs)(n.p,{children:["An amount of bytes at which the batch should be flushed. If ",(0,s.jsx)(n.code,{children:"0"})," disables size based batching."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"int"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:"0"})]}),"\n",(0,s.jsx)(n.h3,{id:"batchingperiod",children:(0,s.jsx)(n.code,{children:"batching.period"})}),"\n",(0,s.jsx)(n.p,{children:"A period in which an incomplete batch should be flushed regardless of its size."}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'""'})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"# Examples\n\nperiod: 1s\n\nperiod: 1m\n\nperiod: 500ms\n"})}),"\n",(0,s.jsx)(n.h3,{id:"batchingcheck",children:(0,s.jsx)(n.code,{children:"batching.check"})}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.a,{href:"/docs/guides/bloblang/about/",children:"Bloblang query"})," that should return a boolean value indicating whether a message should end a batch."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'""'})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'# Examples\n\ncheck: this.type == "end_of_transaction"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"batchingprocessors",children:(0,s.jsx)(n.code,{children:"batching.processors"})}),"\n",(0,s.jsxs)(n.p,{children:["A list of ",(0,s.jsx)(n.a,{href:"/docs/components/processors/about",children:"processors"})," to apply to a batch as it is flushed. This allows you to aggregate and archive the batch however you see fit. Please note that all resulting messages are flushed as a single batch, therefore splitting the batch into smaller batches using these processors is a no-op."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"array"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"# Examples\n\nprocessors:\n  - archive:\n      format: concatenate\n\nprocessors:\n  - archive:\n      format: lines\n\nprocessors:\n  - archive:\n      format: json_array\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},85162:function(e,n,t){t.d(n,{Z:function(){return c}});t(67294);var s=t(86010),o={tabItem:"tabItem_Ymn6"},i=t(85893);function c(e){let{children:n,hidden:t,className:c}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.Z)(o.tabItem,c),hidden:t,children:n})}},74866:function(e,n,t){t.d(n,{Z:function(){return y}});var s=t(67294),o=t(86010),i=t(12466),c=t(16550),r=t(20469),a=t(91980),l=t(67392),d=t(50012);function u(e){var n,t;return null!=(n=null==(t=s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:o}}=e;return{value:n,label:t,attributes:s,default:o}}))}(t);return function(e){const n=(0,l.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const o=(0,c.k6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,a._X)(i),(0,s.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(o.location.search);n.set(i,e),o.replace({...o.location,search:n.toString()})}),[i,o])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,i=h(e),[c,a]=(0,s.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:s}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+s.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const o=null!=(n=s.find((e=>e.default)))?n:s[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:i}))),[l,u]=m({queryString:t,groupId:o}),[g,b]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[o,i]=(0,d.Nk)(t);return[o,(0,s.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:o}),x=(()=>{const e=null!=l?l:g;return p({value:e,tabValues:i})?e:null})();(0,r.Z)((()=>{x&&a(x)}),[x]);return{selectedValue:c,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);a(e),u(e),b(e)}),[u,b,i]),tabValues:i}}var b=t(72389),x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},f=t(85893);function j(e){let{className:n,block:t,selectedValue:s,selectValue:c,tabValues:r}=e;const a=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.o5)(),d=e=>{const n=e.currentTarget,t=a.indexOf(n),o=r[t].value;o!==s&&(l(n),c(o))},u=e=>{var n;let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var s;const n=a.indexOf(e.currentTarget)+1;t=null!=(s=a[n])?s:a[0];break}case"ArrowLeft":{var o;const n=a.indexOf(e.currentTarget)-1;t=null!=(o=a[n])?o:a[a.length-1];break}}null==(n=t)||n.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n),children:r.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>a.push(e),onKeyDown:u,onClick:d,...i,className:(0,o.Z)("tabs__item",x.tabItem,null==i?void 0:i.className,{"tabs__item--active":s===n}),children:null!=t?t:n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:o}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===o));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function _(e){const n=g(e);return(0,f.jsxs)("div",{className:(0,o.Z)("tabs-container",x.tabList),children:[(0,f.jsx)(j,{...e,...n}),(0,f.jsx)(v,{...e,...n})]})}function y(e){const n=(0,b.Z)();return(0,f.jsx)(_,{...e,children:u(e.children)},String(n))}},11151:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return c}});var s=t(67294);const o={},i=s.createContext(o);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);