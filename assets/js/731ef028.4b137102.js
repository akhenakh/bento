"use strict";(self.webpackChunkbento=self.webpackChunkbento||[]).push([[1842],{92732:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return d}});var s=n(85893),a=n(11151),r=n(74866),l=n(85162);const i={title:"read_until",slug:"read_until",type:"input",status:"stable",categories:["Utility"],name:"read_until"},o=void 0,u={id:"components/inputs/read_until",title:"read_until",description:"\x3c!--",source:"@site/docs/components/inputs/read_until.md",sourceDirName:"components/inputs",slug:"/components/inputs/read_until",permalink:"/bento/docs/components/inputs/read_until",draft:!1,unlisted:!1,editUrl:"https://github.com/warpstreamlabs/bento/edit/main/website/docs/components/inputs/read_until.md",tags:[],version:"current",frontMatter:{title:"read_until",slug:"read_until",type:"input",status:"stable",categories:["Utility"],name:"read_until"},sidebar:"docs",previous:{title:"pulsar",permalink:"/bento/docs/components/inputs/pulsar"},next:{title:"redis_list",permalink:"/bento/docs/components/inputs/redis_list"}},c={},d=[{value:"Metadata",id:"metadata",level:3},{value:"Fields",id:"fields",level:2},{value:"<code>input</code>",id:"input",level:3},{value:"<code>check</code>",id:"check",level:3},{value:"<code>idle_timeout</code>",id:"idle_timeout",level:3},{value:"<code>restart_input</code>",id:"restart_input",level:3},{value:"Examples",id:"examples",level:2}];function h(e){const t={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Reads messages from a child input until a consumed message passes a ",(0,s.jsx)(t.a,{href:"/docs/guides/bloblang/about/",children:"Bloblang query"}),", at which point the input closes. It is also possible to configure a timeout after which the input is closed if no new messages arrive in that period."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yml",children:'# Config fields, showing default values\ninput:\n  label: ""\n  read_until:\n    input: null # No default (required)\n    check: this.type == "foo" # No default (optional)\n    idle_timeout: 5s # No default (optional)\n    restart_input: false\n'})}),"\n",(0,s.jsx)(t.p,{children:"Messages are read continuously while the query check returns false, when the query returns true the message that triggered the check is sent out and the input is closed. Use this to define inputs where the stream should end once a certain message appears."}),"\n",(0,s.jsx)(t.p,{children:"If the idle timeout is configured, the input will be closed if no new messages arrive after that period of time. Use this field if you want to empty out and close an input that doesn't have a logical end."}),"\n",(0,s.jsxs)(t.p,{children:["Sometimes inputs close themselves. For example, when the ",(0,s.jsx)(t.code,{children:"file"})," input type reaches the end of a file it will shut down. By default this type will also shut down. If you wish for the input type to be restarted every time it shuts down until the query check is met then set ",(0,s.jsx)(t.code,{children:"restart_input"})," to ",(0,s.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"metadata",children:"Metadata"}),"\n",(0,s.jsxs)(t.p,{children:["A metadata key ",(0,s.jsx)(t.code,{children:"bento_read_until"})," containing the value ",(0,s.jsx)(t.code,{children:"final"})," is added to the first part of the message that triggers the input to stop."]}),"\n",(0,s.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,s.jsx)(t.h3,{id:"input",children:(0,s.jsx)(t.code,{children:"input"})}),"\n",(0,s.jsx)(t.p,{children:"The child input to consume from."}),"\n",(0,s.jsxs)(t.p,{children:["Type: ",(0,s.jsx)(t.code,{children:"input"})]}),"\n",(0,s.jsx)(t.h3,{id:"check",children:(0,s.jsx)(t.code,{children:"check"})}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.a,{href:"/docs/guides/bloblang/about/",children:"Bloblang query"})," that should return a boolean value indicating whether the input should now be closed."]}),"\n",(0,s.jsxs)(t.p,{children:["Type: ",(0,s.jsx)(t.code,{children:"string"})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yml",children:'# Examples\n\ncheck: this.type == "foo"\n\ncheck: count("messages") >= 100\n'})}),"\n",(0,s.jsx)(t.h3,{id:"idle_timeout",children:(0,s.jsx)(t.code,{children:"idle_timeout"})}),"\n",(0,s.jsx)(t.p,{children:"The maximum amount of time without receiving new messages after which the input is closed."}),"\n",(0,s.jsxs)(t.p,{children:["Type: ",(0,s.jsx)(t.code,{children:"string"})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yml",children:"# Examples\n\nidle_timeout: 5s\n"})}),"\n",(0,s.jsx)(t.h3,{id:"restart_input",children:(0,s.jsx)(t.code,{children:"restart_input"})}),"\n",(0,s.jsx)(t.p,{children:"Whether the input should be reopened if it closes itself before the condition has resolved to true."}),"\n",(0,s.jsxs)(t.p,{children:["Type: ",(0,s.jsx)(t.code,{children:"bool"}),(0,s.jsx)(t.br,{}),"\n","Default: ",(0,s.jsx)(t.code,{children:"false"})]}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(r.Z,{defaultValue:"Consume N Messages",values:[{label:"Consume N Messages",value:"Consume N Messages"},{label:"Read from a kafka and close when empty",value:"Read from a kafka and close when empty"}],children:[(0,s.jsxs)(l.Z,{value:"Consume N Messages",children:[(0,s.jsxs)(t.p,{children:["A common reason to use this input is to consume only N messages from an input and then stop. This can easily be done with the ",(0,s.jsxs)(t.a,{href:"/docs/guides/bloblang/functions/#count",children:[(0,s.jsx)(t.code,{children:"count"})," function"]}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'# Only read 100 messages, and then exit.\ninput:\n  read_until:\n    check: count("messages") >= 100\n    input:\n      kafka:\n        addresses: [ TODO ]\n        topics: [ foo, bar ]\n        consumer_group: foogroup\n'})})]}),(0,s.jsxs)(l.Z,{value:"Read from a kafka and close when empty",children:[(0,s.jsx)(t.p,{children:"A common reason to use this input is a job that consumes all messages and exits once its empty:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"# Consumes all messages and exit when the last message was consumed 5s ago.\ninput:\n  read_until:\n    idle_timeout: 5s\n    input:\n      kafka:\n        addresses: [ TODO ]\n        topics: [ foo, bar ]\n        consumer_group: foogroup\n"})})]})]})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},85162:function(e,t,n){n.d(t,{Z:function(){return l}});n(67294);var s=n(86010),a={tabItem:"tabItem_Ymn6"},r=n(85893);function l(e){let{children:t,hidden:n,className:l}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.Z)(a.tabItem,l),hidden:n,children:t})}},74866:function(e,t,n){n.d(t,{Z:function(){return w}});var s=n(67294),a=n(86010),r=n(12466),l=n(16550),i=n(20469),o=n(91980),u=n(67392),c=n(50012);function d(e){var t,n;return null!=(t=null==(n=s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}function h(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=null!=t?t:function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:s,default:a}}=e;return{value:t,label:n,attributes:s,default:a}}))}(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,o._X)(r),(0,s.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=h(e),[l,o]=(0,s.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:s}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+s.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const a=null!=(t=s.find((e=>e.default)))?t:s[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[u,d]=m({queryString:n,groupId:a}),[f,b]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[a,r]=(0,c.Nk)(n);return[a,(0,s.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),g=(()=>{const e=null!=u?u:f;return p({value:e,tabValues:r})?e:null})();(0,i.Z)((()=>{g&&o(g)}),[g]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);o(e),d(e),b(e)}),[d,b,r]),tabValues:r}}var b=n(72389),g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},x=n(85893);function v(e){let{className:t,block:n,selectedValue:s,selectValue:l,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.o5)(),c=e=>{const t=e.currentTarget,n=o.indexOf(t),a=i[n].value;a!==s&&(u(t),l(a))},d=e=>{var t;let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var s;const t=o.indexOf(e.currentTarget)+1;n=null!=(s=o[t])?s:o[0];break}case"ArrowLeft":{var a;const t=o.indexOf(e.currentTarget)-1;n=null!=(a=o[t])?a:o[o.length-1];break}}null==(t=n)||t.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>o.push(e),onKeyDown:d,onClick:c,...r,className:(0,a.Z)("tabs__item",g.tabItem,null==r?void 0:r.className,{"tabs__item--active":s===t}),children:null!=n?n:t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function y(e){const t=f(e);return(0,x.jsxs)("div",{className:(0,a.Z)("tabs-container",g.tabList),children:[(0,x.jsx)(v,{...e,...t}),(0,x.jsx)(j,{...e,...t})]})}function w(e){const t=(0,b.Z)();return(0,x.jsx)(y,{...e,children:d(e.children)},String(t))}},11151:function(e,t,n){n.d(t,{Z:function(){return i},a:function(){return l}});var s=n(67294);const a={},r=s.createContext(a);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);