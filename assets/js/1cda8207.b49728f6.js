"use strict";(self.webpackChunkbento=self.webpackChunkbento||[]).push([[9590],{7384:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return d}});var o=t(5893),r=t(1151),i=t(4866),s=t(5162);const a={title:"Configuration",sidebar_label:"About",description:"Learn about Bento configuration"},l=void 0,c={id:"configuration/about",title:"Configuration",description:"Learn about Bento configuration",source:"@site/docs/configuration/about.md",sourceDirName:"configuration",slug:"/configuration/about",permalink:"/bento/docs/configuration/about",draft:!1,unlisted:!1,editUrl:"https://github.com/warpstreamlabs/bento/edit/main/website/docs/configuration/about.md",tags:[],version:"current",frontMatter:{title:"Configuration",sidebar_label:"About",description:"Learn about Bento configuration"},sidebar:"docs",previous:{title:"About",permalink:"/bento/docs/about"},next:{title:"Resources",permalink:"/bento/docs/configuration/resources"}},u={},d=[{value:"Testing",id:"testing",level:3},{value:"Customising Your Configuration",id:"customising-your-configuration",level:2},{value:"Reusing Configuration Snippets",id:"reusing-configuration-snippets",level:2},{value:"Feature Toggles",id:"feature-toggles",level:3},{value:"Templating",id:"templating",level:3},{value:"Reloading",id:"reloading",level:2},{value:"Enabling Discovery",id:"enabling-discovery",level:2},{value:"Help With Debugging",id:"help-with-debugging",level:2},{value:"Linting",id:"linting",level:3},{value:"Echoing",id:"echoing",level:3},{value:"Shutting down",id:"shutting-down",level:2},{value:"Shutdown delay",id:"shutdown-delay",level:3},{value:"Shutdown timeout",id:"shutdown-timeout",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Bento pipelines are configured in a YAML file that consists of a number of root sections, arranged like so:"}),"\n","\n","\n",(0,o.jsxs)(i.Z,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Full",value:"full"}],children:[(0,o.jsx)(s.Z,{value:"common",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'input:\n  kafka:\n    addresses: [ TODO ]\n    topics: [ foo, bar ]\n    consumer_group: foogroup\n\npipeline:\n  processors:\n  - mapping: |\n      root.message = this\n      root.meta.link_count = this.links.length()\n\noutput:\n  aws_s3:\n    bucket: TODO\n    path: \'${! meta("kafka_topic") }/${! json("message.id") }.json\'\n'})})}),(0,o.jsx)(s.Z,{value:"full",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'http:\n  address: 0.0.0.0:4195\n  debug_endpoints: false\n\ninput:\n  kafka:\n    addresses: [ TODO ]\n    topics: [ foo, bar ]\n    consumer_group: foogroup\n\nbuffer:\n  none: {}\n\npipeline:\n  processors:\n  - mapping: |\n      root.message = this\n      root.meta.link_count = this.links.length()\n\noutput:\n  aws_s3:\n    bucket: TODO\n    path: \'${! meta("kafka_topic") }/${! json("message.id") }.json\'\n\ninput_resources: []\ncache_resources: []\nprocessor_resources: []\nrate_limit_resources: []\noutput_resources: []\n\nlogger:\n  level: INFO\n  static_fields:\n    \'@service\': bento\n\nmetrics:\n  prometheus: {}\n\ntracer:\n  none: {}\n\nshutdown_timeout: 20s\nshutdown_delay: ""\n'})})})]}),"\n",(0,o.jsxs)(n.p,{children:["Most sections represent a component type, which you can read about in more detail in ",(0,o.jsx)(n.a,{href:"/docs/components/about",children:"this document"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["These types are hierarchical. For example, an ",(0,o.jsx)(n.code,{children:"input"})," can have a list of child ",(0,o.jsx)(n.code,{children:"processor"})," types attached to it, which in turn can have their own ",(0,o.jsx)(n.code,{children:"processor"})," children."]}),"\n",(0,o.jsx)(n.p,{children:"This is powerful but can potentially lead to large and cumbersome configuration files. This document outlines tooling provided by Bento to help with writing and managing these more complex configuration files."}),"\n",(0,o.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,o.jsxs)(n.p,{children:["For guidance on how to write and run unit tests for your configuration files read ",(0,o.jsx)(n.a,{href:"/docs/configuration/unit_testing",children:"this guide"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"customising-your-configuration",children:"Customising Your Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Sometimes it's useful to write a configuration where certain fields can be defined during deployment. For this purpose Bento supports ",(0,o.jsx)(n.a,{href:"/docs/configuration/interpolation",children:"environment variable interpolation"}),", allowing you to set fields in your config with environment variables like so:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"input:\n  kafka:\n    addresses:\n    - ${KAFKA_BROKER:localhost:9092}\n    topics:\n    - ${KAFKA_TOPIC:default-topic}\n"})}),"\n",(0,o.jsx)(n.p,{children:"This is very useful for sharing configuration files across different deployment environments."}),"\n",(0,o.jsx)(n.h2,{id:"reusing-configuration-snippets",children:"Reusing Configuration Snippets"}),"\n",(0,o.jsxs)(n.p,{children:["Sometimes it's necessary to use a rather large component multiple times. Instead of copy/pasting the configuration or using YAML anchors you can define your component ",(0,o.jsx)(n.a,{href:"/docs/configuration/resources",children:"as a resource"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:['In the following example we want to make an HTTP request with our payloads. Occasionally the payload might get rejected due to garbage within its contents, and so we catch these rejected requests, attempt to "cleanse" the contents and try to make the same HTTP request again. Since the HTTP request component is quite large (and likely to change over time) we make sure to avoid duplicating it by defining it as a resource ',(0,o.jsx)(n.code,{children:"get_foo"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'pipeline:\n  processors:\n    - resource: get_foo\n    - catch:\n      - mapping: |\n          root = this\n          root.content = this.content.strip_html()\n      - resource: get_foo\n\nprocessor_resources:\n  - label: get_foo\n    http:\n      url: http://example.com/foo\n      verb: POST\n      headers:\n        SomeThing: "set-to-this"\n        SomeThingElse: "set-to-something-else"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"feature-toggles",children:"Feature Toggles"}),"\n",(0,o.jsxs)(n.p,{children:["Resources can be imported separately to your config file with the cli flag ",(0,o.jsx)(n.code,{children:"-r"})," or ",(0,o.jsx)(n.code,{children:"-resources"}),", which is a useful way to switch out resources with common names based on your chosen environment. For example, with a main configuration file ",(0,o.jsx)(n.code,{children:"config.yaml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"pipeline:\n  processors:\n    - resource: get_foo\n"})}),"\n",(0,o.jsxs)(n.p,{children:["And then two resource files, one stored at the path ",(0,o.jsx)(n.code,{children:"./staging/request.yaml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'processor_resources:\n  - label: get_foo\n    http:\n      url: http://example.com/foo\n      verb: POST\n      headers:\n        SomeThing: "set-to-this"\n        SomeThingElse: "set-to-something-else"\n'})}),"\n",(0,o.jsxs)(n.p,{children:["And another stored at the path ",(0,o.jsx)(n.code,{children:"./production/request.yaml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'processor_resources:\n  - label: get_foo\n    http:\n      url: http://example.com/bar\n      verb: PUT\n      headers:\n        Desires: "are-empty"\n'})}),"\n",(0,o.jsx)(n.p,{children:"We can select our chosen resource by changing which file we import, either running:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"bento -r ./staging/request.yaml -c ./config.yaml\n"})}),"\n",(0,o.jsx)(n.p,{children:"Or:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"bento -r ./production/request.yaml -c ./config.yaml\n"})}),"\n",(0,o.jsxs)(n.p,{children:["These flags also support wildcards, which allows you to import an entire directory of resource files like ",(0,o.jsx)(n.code,{children:'bento -r "./staging/*.yaml" -c ./config.yaml'}),". You can find out more about configuration resources in the ",(0,o.jsx)(n.a,{href:"/docs/configuration/resources",children:"resources document"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"templating",children:"Templating"}),"\n",(0,o.jsx)(n.p,{children:"Resources can only be instantiated with a single configuration, which means they aren't suitable for cases where the configuration is required in multiple places but with slightly different parameters, ugh!"}),"\n",(0,o.jsxs)(n.p,{children:["But hey, why don't you chill out? Bento has a (currently experimental) alternative feature called templates, with which it's possible to define a custom configuration schema and a template for building a configuration from that schema. You can read more about templates ",(0,o.jsx)(n.a,{href:"/docs/configuration/templating",children:"in this guide"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"reloading",children:"Reloading"}),"\n",(0,o.jsxs)(n.p,{children:["It's possible to have a running instance of Bento reload configurations, including resource files imported with ",(0,o.jsx)(n.code,{children:"-r"}),"/",(0,o.jsx)(n.code,{children:"--resources"}),", automatically when the files are updated without needing to manually restart the service. This is done by specifying the ",(0,o.jsx)(n.code,{children:"-w"}),"/",(0,o.jsx)(n.code,{children:"--watcher"})," flag when running Bento in normal mode or in streams mode:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"# Normal mode\nbento -w -r ./production/request.yaml -c ./config.yaml\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"# Streams mode\nbento -w -r ./production/request.yaml streams ./stream_configs/*.yaml\n"})}),"\n",(0,o.jsx)(n.p,{children:"If a file update results in configuration parsing or linting errors then the change is ignored (with logs informing you of the problem) and the previous configuration will continue to be run (until the issues are fixed)."}),"\n",(0,o.jsx)(n.h2,{id:"enabling-discovery",children:"Enabling Discovery"}),"\n",(0,o.jsx)(n.p,{children:"The discoverability of configuration fields is a common headache with any configuration driven application. The classic solution is to provide curated documentation that is often hosted on a dedicated site."}),"\n",(0,o.jsx)(n.p,{children:"However, a user often only needs to get their hands on a short, runnable example config file for their use case. They just need to see the format and field names as the fields themselves are usually self explanatory. Forcing such a user to navigate a website, scrolling through paragraphs of text, seems inefficient when all they actually needed to see was something like:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"input:\n  amqp_0_9:\n    urls: [ amqp://guest:guest@localhost:5672/ ]\n    consumer_tag: bento-consumer\n    queue: bento-queue\n    prefetch_count: 10\n    prefetch_size: 0\noutput:\n  stdout: {}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In order to make this process easier Bento is able to generate usable configuration examples for any types, and you can do this from the binary using the ",(0,o.jsx)(n.code,{children:"create"})," subcommand."]}),"\n",(0,o.jsxs)(n.p,{children:["If, for example, we wanted to generate a config with a websocket input, a Kafka output and a ",(0,o.jsxs)(n.a,{href:"/docs/components/processors/mapping",children:[(0,o.jsx)(n.code,{children:"mapping"})," processor"]})," in the middle, we could do it with the following command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"bento create websocket/mapping/kafka\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["If you need a gentle reminder as to which components Bento offers you can see those as well with ",(0,o.jsx)(n.code,{children:"bento list"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["All of these generated configuration examples also include other useful config sections such as ",(0,o.jsx)(n.code,{children:"metrics"}),", ",(0,o.jsx)(n.code,{children:"logging"}),", etc with sensible defaults."]}),"\n",(0,o.jsxs)(n.p,{children:["For more information read the output from ",(0,o.jsx)(n.code,{children:"bento create --help"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"help-with-debugging",children:"Help With Debugging"}),"\n",(0,o.jsx)(n.p,{children:"Once you have a config written you now move onto the next headache of proving that it works, and understanding why it doesn't. Bento, like most good config driven services, performs validation on configs and tries to provide sensible error messages."}),"\n",(0,o.jsx)(n.p,{children:"However, with validation it can be hard to capture all problems, and the user usually understands their intentions better than the service. In order to help expose and diagnose config errors Bento provides two mechanisms, linting and echoing."}),"\n",(0,o.jsx)(n.h3,{id:"linting",children:"Linting"}),"\n",(0,o.jsxs)(n.p,{children:["If you attempt to run a config that has linting errors Bento will print the errors and halt execution. If, however, you want to test your configs before deployment you can do so with the ",(0,o.jsx)(n.code,{children:"lint"})," subcommand:"]}),"\n",(0,o.jsxs)(n.p,{children:["For example, imagine we have a config ",(0,o.jsx)(n.code,{children:"foo.yaml"}),", where we intend to read from AMQP, but there is a typo in our config struct:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"input:\n  amqp_0_9:\n    yourl: amqp://guest:guest@rabbitmqserver:5672/\n"})}),"\n",(0,o.jsx)(n.p,{children:"We can catch this error before attempting to run the config:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"$ bento lint ./foo.yaml\n./foo.yaml: line 3: field yourl not recognised\n"})}),"\n",(0,o.jsxs)(n.p,{children:["For more information read the output from ",(0,o.jsx)(n.code,{children:"bento lint --help"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"echoing",children:"Echoing"}),"\n",(0,o.jsxs)(n.p,{children:["Echoing is where Bento can print back your configuration ",(0,o.jsx)(n.em,{children:"after"})," it has been parsed. It is done with the ",(0,o.jsx)(n.code,{children:"echo"})," subcommand, which is able to show you a normalised version of your config, allowing you to see how it was interpreted:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"bento -c ./your-config.yaml echo\n"})}),"\n",(0,o.jsx)(n.p,{children:"You can check the output of the above command to see if certain sections are missing or fields are incorrect, which allows you to pinpoint typos in the config."}),"\n",(0,o.jsx)(n.h2,{id:"shutting-down",children:"Shutting down"}),"\n",(0,o.jsxs)(n.p,{children:["Under normal operating conditions, the Bento process will shut down when there are no more messages produced by inputs and the final message has been processed. The shutdown procedure can also be initiated by sending the process a interrupt (",(0,o.jsx)(n.code,{children:"SIGINT"}),") or termination (",(0,o.jsx)(n.code,{children:"SIGTERM"}),") signal. There are two top-level configuration options that control the shutdown behaviour: ",(0,o.jsx)(n.code,{children:"shutdown_timeout"})," and ",(0,o.jsx)(n.code,{children:"shutdown_delay"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"shutdown-delay",children:"Shutdown delay"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"shutdown_delay"})," option can be used to delay the start of the shutdown procedure. This is useful for pipelines that need a short grace period to have their metrics and traces scraped. While the shutdown delay is in effect, the HTTP metrics endpoint continues to be available for scraping and any active tracers are free to flush remaining traces."]}),"\n",(0,o.jsx)(n.p,{children:"The shutdown delay can be interrupted by sending the Bento process a second OS interrupt or termination signal."}),"\n",(0,o.jsx)(n.h3,{id:"shutdown-timeout",children:"Shutdown timeout"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"shutdown_timeout"})," option sets a hard deadline for Bento process to gracefully terminate. If this duration is exceeded then the process is forcefully terminated and any messages that were in-flight will be dropped."]}),"\n",(0,o.jsxs)(n.p,{children:["This option takes effect after the ",(0,o.jsx)(n.code,{children:"shutdown_delay"})," duration has passed if that is enabled."]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},5162:function(e,n,t){t.d(n,{Z:function(){return s}});t(7294);var o=t(6010),r={tabItem:"tabItem_Ymn6"},i=t(5893);function s(e){let{children:n,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,s),hidden:t,children:n})}},4866:function(e,n,t){t.d(n,{Z:function(){return v}});var o=t(7294),r=t(6010),i=t(2466),s=t(6550),a=t(469),l=t(1980),c=t(7392),u=t(12);function d(e){var n,t;return null!=(n=null==(t=o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function h(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=null!=n?n:function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:r}}=e;return{value:n,label:t,attributes:o,default:r}}))}(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.k6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,l._X)(i),(0,o.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,i=h(e),[s,l]=(0,o.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:o}=e;if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:o}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+o.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const r=null!=(n=o.find((e=>e.default)))?n:o[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[c,d]=g({queryString:t,groupId:r}),[f,m]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[r,i]=(0,u.Nk)(t);return[r,(0,o.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:r}),b=(()=>{const e=null!=c?c:f;return p({value:e,tabValues:i})?e:null})();(0,a.Z)((()=>{b&&l(b)}),[b]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);l(e),d(e),m(e)}),[d,m,i]),tabValues:i}}var m=t(2389),b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},x=t(5893);function y(e){let{className:n,block:t,selectedValue:o,selectValue:s,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),r=a[t].value;r!==o&&(c(n),s(r))},d=e=>{var n;let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{var o;const n=l.indexOf(e.currentTarget)+1;t=null!=(o=l[n])?o:l[0];break}case"ArrowLeft":{var r;const n=l.indexOf(e.currentTarget)-1;t=null!=(r=l[n])?r:l[l.length-1];break}}null==(n=t)||n.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>l.push(e),onKeyDown:d,onClick:u,...i,className:(0,r.Z)("tabs__item",b.tabItem,null==i?void 0:i.className,{"tabs__item--active":o===n}),children:null!=t?t:n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:r}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function w(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,r.Z)("tabs-container",b.tabList),children:[(0,x.jsx)(y,{...e,...n}),(0,x.jsx)(j,{...e,...n})]})}function v(e){const n=(0,m.Z)();return(0,x.jsx)(w,{...e,children:d(e.children)},String(n))}},1151:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return s}});var o=t(7294);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);