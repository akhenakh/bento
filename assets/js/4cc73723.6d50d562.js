"use strict";(self.webpackChunkbento=self.webpackChunkbento||[]).push([[6319],{7581:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var r=t(5893),s=t(1151),a=t(4866),l=t(5162);const o={title:"csv",slug:"csv",type:"input",status:"stable",categories:["Local"],name:"csv"},i=void 0,c={id:"components/inputs/csv",title:"csv",description:"\x3c!--",source:"@site/docs/components/inputs/csv.md",sourceDirName:"components/inputs",slug:"/components/inputs/csv",permalink:"/bento/docs/components/inputs/csv",draft:!1,unlisted:!1,editUrl:"https://github.com/warpstreamlabs/bento/edit/main/website/docs/components/inputs/csv.md",tags:[],version:"current",frontMatter:{title:"csv",slug:"csv",type:"input",status:"stable",categories:["Local"],name:"csv"},sidebar:"docs",previous:{title:"cockroachdb_changefeed",permalink:"/bento/docs/components/inputs/cockroachdb_changefeed"},next:{title:"discord",permalink:"/bento/docs/components/inputs/discord"}},d={},u=[{value:"Metadata",id:"metadata",level:3},{value:"Output CSV column order",id:"output-csv-column-order",level:3},{value:"Fields",id:"fields",level:2},{value:"<code>paths</code>",id:"paths",level:3},{value:"<code>parse_header_row</code>",id:"parse_header_row",level:3},{value:"<code>delimiter</code>",id:"delimiter",level:3},{value:"<code>lazy_quotes</code>",id:"lazy_quotes",level:3},{value:"<code>delete_on_finish</code>",id:"delete_on_finish",level:3},{value:"<code>batch_count</code>",id:"batch_count",level:3},{value:"<code>auto_replay_nacks</code>",id:"auto_replay_nacks",level:3}];function h(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Reads one or more CSV files as structured records following the format described in RFC 4180."}),"\n",(0,r.jsxs)(a.Z,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],children:[(0,r.jsx)(l.Z,{value:"common",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"# Common config fields, showing default values\ninput:\n  label: \"\"\n  csv:\n    paths: [] # No default (required)\n    parse_header_row: true\n    delimiter: ','\n    lazy_quotes: false\n    auto_replay_nacks: true\n"})})}),(0,r.jsx)(l.Z,{value:"advanced",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"# All config fields, showing default values\ninput:\n  label: \"\"\n  csv:\n    paths: [] # No default (required)\n    parse_header_row: true\n    delimiter: ','\n    lazy_quotes: false\n    delete_on_finish: false\n    batch_count: 1\n    auto_replay_nacks: true\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["This input offers more control over CSV parsing than the ",(0,r.jsxs)(n.a,{href:"/docs/components/inputs/file",children:[(0,r.jsx)(n.code,{children:"file"})," input"]}),"."]}),"\n",(0,r.jsx)(n.p,{children:"When parsing with a header row each line of the file will be consumed as a structured object, where the key names are determined from the header now. For example, the following CSV file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csv",children:"foo,bar,baz\nfirst foo,first bar,first baz\nsecond foo,second bar,second baz\n"})}),"\n",(0,r.jsx)(n.p,{children:"Would produce the following messages:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{"foo":"first foo","bar":"first bar","baz":"first baz"}\n{"foo":"second foo","bar":"second bar","baz":"second baz"}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If, however, the field ",(0,r.jsx)(n.code,{children:"parse_header_row"})," is set to ",(0,r.jsx)(n.code,{children:"false"})," then arrays are produced instead, like follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'["first foo","first bar","first baz"]\n["second foo","second bar","second baz"]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"metadata",children:"Metadata"}),"\n",(0,r.jsx)(n.p,{children:"This input adds the following metadata fields to each message:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"- header\n- path\n- mod_time_unix\n- mod_time (RFC3339)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can access these metadata fields using ",(0,r.jsx)(n.a,{href:"/docs/configuration/interpolation#bloblang-queries",children:"function interpolation"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Note: The ",(0,r.jsx)(n.code,{children:"header"})," field is only set when ",(0,r.jsx)(n.code,{children:"parse_header_row"})," is ",(0,r.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"output-csv-column-order",children:"Output CSV column order"}),"\n",(0,r.jsxs)(n.p,{children:["When ",(0,r.jsx)(n.a,{href:"/docs/guides/bloblang/advanced#creating-csv",children:"creating CSV"})," from Bento messages, the columns must be sorted lexicographically to make the output deterministic. Alternatively, when using the ",(0,r.jsx)(n.code,{children:"csv"})," input, one can leverage the ",(0,r.jsx)(n.code,{children:"header"})," metadata field to retrieve the column order:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'input:\n  csv:\n    paths:\n      - ./foo.csv\n      - ./bar.csv\n    parse_header_row: true\n\n  processors:\n    - mapping: |\n        map escape_csv {\n          root = if this.re_match("[\\"\\n,]+") {\n            "\\"" + this.replace_all("\\"", "\\"\\"") + "\\""\n          } else {\n            this\n          }\n        }\n\n        let header = if count(@path) == 1 {\n          @header.map_each(c -> c.apply("escape_csv")).join(",") + "\\n"\n        } else { "" }\n\n        root = $header + @header.map_each(c -> this.get(c).string().apply("escape_csv")).join(",")\n\noutput:\n  file:\n    path: ./output/${! @path.filepath_split().index(-1) }\n'})}),"\n",(0,r.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,r.jsx)(n.h3,{id:"paths",children:(0,r.jsx)(n.code,{children:"paths"})}),"\n",(0,r.jsx)(n.p,{children:"A list of file paths to read from. Each file will be read sequentially until the list is exhausted, at which point the input will close. Glob patterns are supported, including super globs (double star)."}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"array"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"# Examples\n\npaths:\n  - /tmp/foo.csv\n  - /tmp/bar/*.csv\n  - /tmp/data/**/*.csv\n"})}),"\n",(0,r.jsx)(n.h3,{id:"parse_header_row",children:(0,r.jsx)(n.code,{children:"parse_header_row"})}),"\n",(0,r.jsx)(n.p,{children:"Whether to reference the first row as a header row. If set to true the output structure for messages will be an object where field keys are determined by the header row. Otherwise, each message will consist of an array of values from the corresponding CSV row."}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"bool"}),(0,r.jsx)(n.br,{}),"\n","Default: ",(0,r.jsx)(n.code,{children:"true"})]}),"\n",(0,r.jsx)(n.h3,{id:"delimiter",children:(0,r.jsx)(n.code,{children:"delimiter"})}),"\n",(0,r.jsx)(n.p,{children:"The delimiter to use for splitting values in each record. It must be a single character."}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"string"}),(0,r.jsx)(n.br,{}),"\n","Default: ",(0,r.jsx)(n.code,{children:'","'})]}),"\n",(0,r.jsx)(n.h3,{id:"lazy_quotes",children:(0,r.jsx)(n.code,{children:"lazy_quotes"})}),"\n",(0,r.jsxs)(n.p,{children:["If set to ",(0,r.jsx)(n.code,{children:"true"}),", a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field."]}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"bool"}),(0,r.jsx)(n.br,{}),"\n","Default: ",(0,r.jsx)(n.code,{children:"false"}),(0,r.jsx)(n.br,{}),"\n","Requires version 4.1.0 or newer"]}),"\n",(0,r.jsx)(n.h3,{id:"delete_on_finish",children:(0,r.jsx)(n.code,{children:"delete_on_finish"})}),"\n",(0,r.jsx)(n.p,{children:"Whether to delete input files from the disk once they are fully consumed."}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"bool"}),(0,r.jsx)(n.br,{}),"\n","Default: ",(0,r.jsx)(n.code,{children:"false"})]}),"\n",(0,r.jsx)(n.h3,{id:"batch_count",children:(0,r.jsx)(n.code,{children:"batch_count"})}),"\n",(0,r.jsx)(n.p,{children:"Optionally process records in batches. This can help to speed up the consumption of exceptionally large CSV files. When the end of the file is reached the remaining records are processed as a (potentially smaller) batch."}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"int"}),(0,r.jsx)(n.br,{}),"\n","Default: ",(0,r.jsx)(n.code,{children:"1"})]}),"\n",(0,r.jsx)(n.h3,{id:"auto_replay_nacks",children:(0,r.jsx)(n.code,{children:"auto_replay_nacks"})}),"\n",(0,r.jsxs)(n.p,{children:["Whether messages that are rejected (nacked) at the output level should be automatically replayed indefinitely, eventually resulting in back pressure if the cause of the rejections is persistent. If set to ",(0,r.jsx)(n.code,{children:"false"})," these messages will instead be deleted. Disabling auto replays can greatly improve memory efficiency of high throughput streams as the original shape of the data can be discarded immediately upon consumption and mutation."]}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"bool"}),(0,r.jsx)(n.br,{}),"\n","Default: ",(0,r.jsx)(n.code,{children:"true"})]}),"\n",(0,r.jsxs)(n.p,{children:["This input is particularly useful when consuming CSV from files too large to parse entirely within memory. However, in cases where CSV is consumed from other input types it's also possible to parse them using the ",(0,r.jsxs)(n.a,{href:"/docs/guides/bloblang/methods#parse_csv",children:["Bloblang ",(0,r.jsx)(n.code,{children:"parse_csv"})," method"]}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},5162:function(e,n,t){t.d(n,{Z:function(){return l}});t(7294);var r=t(6010),s={tabItem:"tabItem_Ymn6"},a=t(5893);function l(e){let{children:n,hidden:t,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,l),hidden:t,children:n})}},4866:function(e,n,t){t.d(n,{Z:function(){return _}});var r=t(7294),s=t(6010),a=t(2466),l=t(6550),o=t(469),i=t(1980),c=t(7392),d=t(12);function u(e){var n,t;return null!=(n=null==(t=r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const s=(0,l.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,i._X)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(s.location.search);n.set(a,e),s.replace({...s.location,search:n.toString()})}),[a,s])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,a=h(e),[l,i]=(0,r.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const s=null!=(n=r.find((e=>e.default)))?n:r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:a}))),[c,u]=f({queryString:t,groupId:s}),[m,b]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[s,a]=(0,d.Nk)(t);return[s,(0,r.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:s}),v=(()=>{const e=null!=c?c:m;return p({value:e,tabValues:a})?e:null})();(0,o.Z)((()=>{v&&i(v)}),[v]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error("Can't select invalid tab value="+e);i(e),u(e),b(e)}),[u,b,a]),tabValues:a}}var b=t(2389),v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},x=t(5893);function j(e){let{className:n,block:t,selectedValue:r,selectValue:l,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.o5)(),d=e=>{const n=e.currentTarget,t=i.indexOf(n),s=o[t].value;s!==r&&(c(n),l(s))},u=e=>{var n;let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var r;const n=i.indexOf(e.currentTarget)+1;t=null!=(r=i[n])?r:i[0];break}case"ArrowLeft":{var s;const n=i.indexOf(e.currentTarget)-1;t=null!=(s=i[n])?s:i[i.length-1];break}}null==(n=t)||n.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>i.push(e),onKeyDown:u,onClick:d,...a,className:(0,s.Z)("tabs__item",v.tabItem,null==a?void 0:a.className,{"tabs__item--active":r===n}),children:null!=t?t:n},n)}))})}function g(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=m(e);return(0,x.jsxs)("div",{className:(0,s.Z)("tabs-container",v.tabList),children:[(0,x.jsx)(j,{...e,...n}),(0,x.jsx)(g,{...e,...n})]})}function _(e){const n=(0,b.Z)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},1151:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return l}});var r=t(7294);const s={},a=r.createContext(s);function l(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);