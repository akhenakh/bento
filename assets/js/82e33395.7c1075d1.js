"use strict";(self.webpackChunkbento=self.webpackChunkbento||[]).push([[6684],{45180:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return r},metadata:function(){return i},toc:function(){return c}});var o=t(85893),a=t(11151);const r={title:"Bloblang Beta",author:"Ashley Jeffs",author_url:"https://github.com/Jeffail",author_image_url:"/img/ash.jpg",description:"Available in v3.13",keywords:["benthos","bloblang","go","golang","stream processor","mapping"],tags:["Bloblang"]},s=void 0,i={permalink:"/blog/2020/05/10/bloblang-beta",source:"@site/blog/2020-05-10-bloblang-beta.md",title:"Bloblang Beta",description:"Available in v3.13",date:"2020-05-10T00:00:00.000Z",formattedDate:"May 10, 2020",tags:[{label:"Bloblang",permalink:"/blog/tags/bloblang"}],readingTime:1.285,hasTruncateMarker:!0,authors:[{name:"Ashley Jeffs",url:"https://github.com/Jeffail",imageURL:"/img/ash.jpg"}],frontMatter:{title:"Bloblang Beta",author:"Ashley Jeffs",author_url:"https://github.com/Jeffail",author_image_url:"/img/ash.jpg",description:"Available in v3.13",keywords:["benthos","bloblang","go","golang","stream processor","mapping"],tags:["Bloblang"]},unlisted:!1,prevItem:{title:"Powered Up Workflows",permalink:"/blog/2020/08/30/improved-workflows"},nextItem:{title:"Sneak Peek at Bloblang",permalink:"/blog/2020/04/18/sneak-peek-at-bloblang"}},l={authorsImageUrls:[void 0]},c=[{value:"The Motivation",id:"the-motivation",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["As of this weekend (and ",(0,o.jsx)(n.a,{href:"https://github.com/warpstreamlabs/bento/releases/tag/v3.13.0",children:"Bento v3.13"}),") you can now use a ",(0,o.jsxs)(n.a,{href:"/docs/components/processors/bloblang",children:[(0,o.jsx)(n.code,{children:"bloblang"})," processor"]})," and complementary condition. These components are in a beta phase, which means that based on feedback the mapping language might change in minor ways in upcoming minor releases."]}),"\n",(0,o.jsx)(n.h2,{id:"the-motivation",children:"The Motivation"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/blog/2020/04/18/sneak-peek-at-bloblang",children:"In the last post"})," I outlined my motivations for experimenting with a mapping language. Words are stupid and boring and so to illustrate why a mapping language kicks ass here's a config example using the old processors compared to the new one. Keep in mind that the new version is simpler ",(0,o.jsx)(n.em,{children:"and"})," performs better."]}),"\n",(0,o.jsx)(n.p,{children:"Using old processors:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"pipeline:\n  processors:\n  - metadata:\n      operator: set\n      key: bar\n      value: ${!json_field:foo.bar} \n\n  - json:\n      operator: delete\n      path: foo.bar\n\n  - json:\n      operator: set\n      path: foo.topic\n      value: ${!metadata:topic} \n\n  - metadata:\n      operator: delete\n      key: topic\n\n  - conditional:\n      condition:\n        jmespath:\n          query: \"foo.baz == 'thing'\"\n      processors:\n      - json:\n          operator: set\n          path: foo.thing_id\n          value: ${!uuid_v4}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Using Bloblang:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'pipeline:\n  processors:\n  - bloblang: |\n      root = this\n\n      foo.topic = meta("topic")\n      meta topic = deleted()\n\n      meta bar = foo.bar\n      foo.bar = deleted()\n\n      foo.thing_id = match {\n        foo.baz == "thing" => uuid_v4()\n      }\n'})}),"\n",(0,o.jsxs)(n.p,{children:["My ultimate intention is to completely eradicate the need for a ",(0,o.jsx)(n.code,{children:"json"}),", ",(0,o.jsx)(n.code,{children:"metadata"})," and ",(0,o.jsx)(n.code,{children:"text"})," processor, as well as a range of others. However, I'll need as much help as possible to get the language right, so please consider testing and feeding back on ",(0,o.jsx)(n.a,{href:"https://github.com/warpstreamlabs/bento/issues/439/",children:"Github"}),", the ",(0,o.jsx)(n.a,{href:"https://gitter.im/jeffail-benthos/community",children:"Gitter channel"}),", or event @ me ",(0,o.jsx)(n.a,{href:"https://twitter.com/Jeffail",children:"on Twitter"})," for the good of blobkind."]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},11151:function(e,n,t){t.d(n,{Z:function(){return i},a:function(){return s}});var o=t(67294);const a={},r=o.createContext(a);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);