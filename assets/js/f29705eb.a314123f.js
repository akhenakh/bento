"use strict";(self.webpackChunkbento=self.webpackChunkbento||[]).push([[6830],{24838:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return r},metadata:function(){return a},toc:function(){return c}});var o=t(85893),s=t(11151);const r={title:"Preview: Go Plugins V2 and Config Templates",author:"Ashley Jeffs",author_url:"https://github.com/Jeffail",author_image_url:"/img/ash.jpg",description:"It's ready, now we need test subjects",keywords:["go","golang","stream processor","ETL"],tags:["v4","plugins","templates","roadmap"]},i=void 0,a={permalink:"/blog/2021/06/02/new-plugins-and-templates",source:"@site/blog/2021-06-02-new-plugins-and-templates.md",title:"Preview: Go Plugins V2 and Config Templates",description:"It's ready, now we need test subjects",date:"2021-06-02T00:00:00.000Z",formattedDate:"June 2, 2021",tags:[{label:"v4",permalink:"/blog/tags/v-4"},{label:"plugins",permalink:"/blog/tags/plugins"},{label:"templates",permalink:"/blog/tags/templates"},{label:"roadmap",permalink:"/blog/tags/roadmap"}],readingTime:3.63,hasTruncateMarker:!0,authors:[{name:"Ashley Jeffs",url:"https://github.com/Jeffail",imageURL:"/img/ash.jpg"}],frontMatter:{title:"Preview: Go Plugins V2 and Config Templates",author:"Ashley Jeffs",author_url:"https://github.com/Jeffail",author_image_url:"/img/ash.jpg",description:"It's ready, now we need test subjects",keywords:["go","golang","stream processor","ETL"],tags:["v4","plugins","templates","roadmap"]},unlisted:!1,prevItem:{title:"Go Plugins V2 are Ready",permalink:"/blog/2021/10/12/new-plugins-stable"},nextItem:{title:"Cross Post: We're Bringing Simple Back (to Streaming)",permalink:"/blog/2021/03/09/redpanda"}},l={authorsImageUrls:[void 0]},c=[{value:"Config Templates",id:"config-templates",level:2},{value:"The V2 Go Plugins API",id:"the-v2-go-plugins-api",level:2},{value:"Join the Community",id:"join-the-community",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["I need help, attention and affirmation, and therefore it's time for a development update. Around five months ago I posted a ",(0,o.jsx)(n.a,{href:"/blog/2021/01/04/v4-roadmap",children:"roadmap for Bento v4"})," that included some utterly unattainable goals that only a super human could achieve."]}),"\n",(0,o.jsx)(n.p,{children:"Now that most of those features are ready to test, namely a new plugins API and config templating, I'm looking for people to try them out and give feedback. Please read on if that sounds like fun to you, or also if it doesn't sound fun but you intend to do it anyway."}),"\n",(0,o.jsx)(n.h2,{id:"config-templates",children:"Config Templates"}),"\n",(0,o.jsx)(n.p,{children:"The new config templates functionality allows you to define parameterised templates for Bento configuration snippets. These templates can then be imported with a cli flag and used in Bento configs like native Bento components."}),"\n",(0,o.jsx)(n.p,{children:"This is going to be super useful in situations where you have commonly used configuration patterns with small differences that prevent you from using resources."}),"\n",(0,o.jsx)(n.p,{children:"The current state of templates is that they'll be included in the next release as an experimental feature, meaning any aspect of this functionality is subject to change outside of major version releases. This includes the config spec of templates, how they work, and so on."}),"\n",(0,o.jsx)(n.p,{children:"Defining a template looks roughly like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'name: log_message\ntype: processor\nsummary: Print a log line that shows the contents of a message.\n\nfields:\n  - name: level\n    description: The level to log at.\n    type: string\n    default: INFO\n\nmapping: |\n  root.log.level = this.level\n  root.log.message = "${! content() }"\n  root.log.fields.metadata = "${! meta() }"\n  root.log.fields.error = "${! error() }"\n'})}),"\n",(0,o.jsxs)(n.p,{children:["And you're able to import templates with the ",(0,o.jsx)(n.code,{children:"-t"})," flag:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"benthos -t ./templates/foo.yaml -c ./config.yaml\n"})}),"\n",(0,o.jsx)(n.p,{children:"And using it in a config looks like any other component:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"pipeline:\n  processors:\n    - log_message:\n        level: ERROR\n"})}),"\n",(0,o.jsxs)(n.p,{children:["To find out more about configuration templates, including how to try them out, check out ",(0,o.jsx)(n.a,{href:"/docs/configuration/templating",children:"the new templates page"}),". More importantly, you can give feedback on them ",(0,o.jsx)(n.a,{href:"https://github.com/warpstreamlabs/bento/discussions/785",children:"in this Github discussion"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"the-v2-go-plugins-api",children:"The V2 Go Plugins API"}),"\n",(0,o.jsx)(n.p,{children:"Bento has had Go plugins for a while now and they're fairly well received. However, they can sometimes be confusing as they expose Bento internals that aren't necessary to understand as plugin authors."}),"\n",(0,o.jsx)(n.p,{children:"It was also an issue for me as a maintainer that the current plugin APIs hook directly into Bento packages that have no business being public. This makes it extra difficult to improve the service without introducing breaking changes."}),"\n",(0,o.jsx)(n.p,{children:"The new APIs are simpler, more powerful (in the ways that matter), add milk after the water, and most importantly are air-gapped from Bento internals so that they can evolve independently. Here's a sneaky glance of what a processor plugin looks like:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'type ReverseProcessor struct {\n\tlogger *service.Logger\n}\n\nfunc (r *ReverseProcessor) Process(ctx context.Context, m *service.Message) ([]*service.Message, error) {\n\tbytesContent, err := m.AsBytes()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tnewBytes := make([]byte, len(bytesContent))\n\tfor i, b := range bytesContent {\n\t\tnewBytes[len(newBytes)-i-1] = b\n\t}\n\n\tif bytes.Equal(newBytes, bytesContent) {\n\t\tr.logger.Infof("Woah! This is like totally a palindrome: %s", bytesContent)\n\t}\n\n\tm.SetBytes(newBytes)\n\treturn []*service.Message{m}, nil\n}\n\nfunc (r *ReverseProcessor) Close(ctx context.Context) error {\n\treturn nil\n}\n\nfunc main() {\n\terr := service.RegisterProcessor(\n\t\t"reverse", service.NewConfigSpec(),\n\t\tfunc(conf *service.ParsedConfig, mgr *service.Resources) (service.Processor, error) {\n\t\t\treturn &ReverseProcessor{logger: mgr.Logger()}, nil\n\t\t})\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tservice.RunCLI()\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"You can play around with these APIs right now by pulling the latest commit with:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"go get -u github.com/warpstreamlabs/bento/v3@master\n"})}),"\n",(0,o.jsxs)(n.p,{children:["And you can find more examples along with the API docs at ",(0,o.jsx)(n.a,{href:"https://pkg.go.dev/github.com/warpstreamlabs/bento/v3/public/service",children:"pkg.go.dev"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The package will remain in an experimental state under ",(0,o.jsx)(n.code,{children:"public/x/service"})," for a month or so, and once it's \"ready\" (I'm personally happy with it) then it'll be moved to ",(0,o.jsx)(n.code,{children:"public/service"})," and will be considered stable."]}),"\n",(0,o.jsx)(n.p,{children:"The goal is to allow everyone to migrate to the new APIs whilst still supporting the old ones, and then when Bento V4 is tagged the old ones will vanish and we're no longer blocked on them."}),"\n",(0,o.jsxs)(n.p,{children:["Similar to the templates there is ",(0,o.jsx)(n.a,{href:"https://github.com/warpstreamlabs/bento/discussions/754",children:"a Github discussion open for feedback"}),". Be honest, be brutal."]}),"\n",(0,o.jsx)(n.h2,{id:"join-the-community",children:"Join the Community"}),"\n",(0,o.jsxs)(n.p,{children:["I've been babbling on for months so if this stuff is news to you then you're clearly out of the loop. Worry not, for you can remedy the situation by joining one or more of our ",(0,o.jsx)(n.a,{href:"/community",children:"glorious community spaces"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},11151:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return i}});var o=t(67294);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);