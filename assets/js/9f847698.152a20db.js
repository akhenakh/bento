"use strict";(self.webpackChunkbento=self.webpackChunkbento||[]).push([[9403],{4535:function(e,n,t){t.r(n),t.d(n,{assets:function(){return a},contentTitle:function(){return r},default:function(){return u},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return d}});var s=t(5893),o=t(1151);const i={title:"Getting Started",description:"Getting started with Bento"},r=void 0,c={id:"guides/getting_started",title:"Getting Started",description:"Getting started with Bento",source:"@site/docs/guides/getting_started.md",sourceDirName:"guides",slug:"/guides/getting_started",permalink:"/bento/docs/guides/getting_started",draft:!1,unlisted:!1,editUrl:"https://github.com/warpstreamlabs/bento/edit/main/website/docs/guides/getting_started.md",tags:[],version:"current",frontMatter:{title:"Getting Started",description:"Getting started with Bento"},sidebar:"docs",previous:{title:"Logger",permalink:"/bento/docs/components/logger/about"},next:{title:"About",permalink:"/bento/docs/guides/bloblang/about"}},a={},d=[{value:"Run",id:"run",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"run",children:"Run"}),"\n",(0,s.jsxs)(n.p,{children:["A Bento stream pipeline is configured with a single ",(0,s.jsx)(n.a,{href:"/docs/configuration/about",children:"config file"}),", you can generate a fresh one with:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"bento create > config.yaml\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The main sections that make up a config are ",(0,s.jsx)(n.code,{children:"input"}),", ",(0,s.jsx)(n.code,{children:"pipeline"})," and ",(0,s.jsx)(n.code,{children:"output"}),". When you generate a fresh config it'll simply pipe ",(0,s.jsx)(n.code,{children:"stdin"})," to ",(0,s.jsx)(n.code,{children:"stdout"})," like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"input:\n  stdin: {}\n\npipeline:\n  processors: []\n\noutput:\n  stdout: {}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Eventually we'll want to configure a more useful ",(0,s.jsx)(n.a,{href:"/docs/components/inputs/about",children:"input"})," and ",(0,s.jsx)(n.a,{href:"/docs/components/outputs/about",children:"output"}),", but for now this is useful for quickly testing processors. You can execute this config with:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"bento -c ./config.yaml\n"})}),"\n",(0,s.jsx)(n.p,{children:"Anything you write to stdin will get written unchanged to stdout, cool! Resist the temptation to play with this for hours, there's more stuff to try out."}),"\n",(0,s.jsxs)(n.p,{children:["Next, let's add some processing steps in order to mutate messages. The most powerful one is the ",(0,s.jsxs)(n.a,{href:"/docs/components/processors/mapping",children:[(0,s.jsx)(n.code,{children:"mapping"})," processor"]})," which allows us to perform mappings, let's add a mapping to uppercase our messages:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"input:\n  stdin: {}\n\npipeline:\n  processors:\n    - mapping: root = content().uppercase()\n\noutput:\n  stdout: {}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now your messages should come out in all caps, how whacky! IT'S LIKE BENTO IS SHOUTING BACK AT YOU!"}),"\n",(0,s.jsxs)(n.p,{children:["You can add as many ",(0,s.jsx)(n.a,{href:"/docs/components/processors/about",children:"processing steps"})," as you like, and since processors are what make Bento powerful they are worth experimenting with. Let's create a more advanced pipeline that works with JSON documents:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'input:\n  stdin: {}\n\npipeline:\n  processors:\n    - sleep:\n        duration: 500ms\n    - mapping: |\n        root.doc = this\n        root.first_name = this.names.index(0).uppercase()\n        root.last_name = this.names.index(-1).hash("sha256").encode("base64")\n\noutput:\n  stdout: {}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["First, we sleep for 500 milliseconds just to keep the suspense going. Next, we restructure our input JSON document by nesting it within a field ",(0,s.jsx)(n.code,{children:"doc"}),", we map the upper-cased first element of ",(0,s.jsx)(n.code,{children:"names"})," to a new field ",(0,s.jsx)(n.code,{children:"first_name"}),". Finally, we map the hashed and base64 encoded value of the last element of ",(0,s.jsx)(n.code,{children:"names"})," to a new field ",(0,s.jsx)(n.code,{children:"last_name"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Try running that config with some sample documents:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'echo \'{"id":"1","names":["celine","dion"]}\n{"id":"2","names":["chad","robert","kroeger"]}\' | bento -c ./config.yaml\n'})}),"\n",(0,s.jsx)(n.p,{children:"You should see (amongst some logs):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'{"doc":{"id":"1","names":["celine","dion"]},"first_name":"CELINE","last_name":"1VvPgCW9sityz5XAMGdI2BTA7/44Wb3cANKxqhiCo50="}\n{"doc":{"id":"2","names":["chad","robert","kroeger"]},"first_name":"CHAD","last_name":"uXXg5wCKPjpyj/qbivPbD9H9CZ5DH/F0Q1Twytnt2hQ="}\n'})}),"\n",(0,s.jsx)(n.p,{children:"How exciting! I don't know about you but I'm going to need to lie down for a while. Now that you are a Bento expert might I suggest you peruse these sections to see if anything tickles your fancy?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/guides/bloblang/walkthrough",children:"Bloblang Walkthrough"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/components/inputs/about",children:"Inputs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/components/processors/about",children:"Processors"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/components/outputs/about",children:"Outputs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/guides/monitoring",children:"Monitoring"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/cookbooks",children:"Cookbooks"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/configuration/about",children:"More about configuration"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:function(e,n,t){t.d(n,{Z:function(){return c},a:function(){return r}});var s=t(7294);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);