"use strict";(self.webpackChunkbento=self.webpackChunkbento||[]).push([[8254],{14934:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return u}});var s=t(85893),i=t(11151),a=t(74866),r=t(85162);const o={title:"system_window",slug:"system_window",type:"buffer",status:"beta",categories:["Windowing"],name:"system_window"},l=void 0,d={id:"components/buffers/system_window",title:"system_window",description:"\x3c!--",source:"@site/docs/components/buffers/system_window.md",sourceDirName:"components/buffers",slug:"/components/buffers/system_window",permalink:"/bento/docs/components/buffers/system_window",draft:!1,unlisted:!1,editUrl:"https://github.com/warpstreamlabs/bento/edit/main/website/docs/components/buffers/system_window.md",tags:[],version:"current",frontMatter:{title:"system_window",slug:"system_window",type:"buffer",status:"beta",categories:["Windowing"],name:"system_window"},sidebar:"docs",previous:{title:"sqlite",permalink:"/bento/docs/components/buffers/sqlite"},next:{title:"About",permalink:"/bento/docs/components/metrics/about"}},c={},u=[{value:"Sliding Windows",id:"sliding-windows",level:2},{value:"Back Pressure",id:"back-pressure",level:2},{value:"Delivery Guarantees",id:"delivery-guarantees",level:2},{value:"Examples",id:"examples",level:2},{value:"Fields",id:"fields",level:2},{value:"<code>timestamp_mapping</code>",id:"timestamp_mapping",level:3},{value:"<code>size</code>",id:"size",level:3},{value:"<code>slide</code>",id:"slide",level:3},{value:"<code>offset</code>",id:"offset",level:3},{value:"<code>allowed_lateness</code>",id:"allowed_lateness",level:3}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{title:"BETA",type:"caution",children:(0,s.jsx)(n.p,{children:"This component is mostly stable but breaking changes could still be made outside of major version releases if a fundamental problem with the component is found."})}),"\n",(0,s.jsx)(n.p,{children:"Chops a stream of messages into tumbling or sliding windows of fixed temporal size, following the system clock."}),"\n",(0,s.jsx)(n.p,{children:"Introduced in version 3.53.0."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'# Config fields, showing default values\nbuffer:\n  system_window:\n    timestamp_mapping: root = now()\n    size: 30s # No default (required)\n    slide: ""\n    offset: ""\n    allowed_lateness: ""\n'})}),"\n",(0,s.jsxs)(n.p,{children:["A window is a grouping of messages that fit within a discrete measure of time following the system clock. Messages are allocated to a window either by the processing time (the time at which they're ingested) or by the event time, and this is controlled via the ",(0,s.jsxs)(n.a,{href:"#timestamp_mapping",children:[(0,s.jsx)(n.code,{children:"timestamp_mapping"})," field"]}),"."]}),"\n",(0,s.jsx)(n.p,{children:"In tumbling mode (default) the beginning of a window immediately follows the end of a prior window. When the buffer is initialized the first window to be created and populated is aligned against the zeroth minute of the zeroth hour of the day by default, and may therefore be open for a shorter period than the specified size."}),"\n",(0,s.jsxs)(n.p,{children:["A window is flushed only once the system clock surpasses its scheduled end. If an ",(0,s.jsx)(n.a,{href:"#allowed_lateness",children:(0,s.jsx)(n.code,{children:"allowed_lateness"})})," is specified then the window will not be flushed until the scheduled end plus that length of time."]}),"\n",(0,s.jsxs)(n.p,{children:["When a message is added to a window it has a metadata field ",(0,s.jsx)(n.code,{children:"window_end_timestamp"})," added to it containing the timestamp of the end of the window as an RFC3339 string."]}),"\n",(0,s.jsx)(n.h2,{id:"sliding-windows",children:"Sliding Windows"}),"\n",(0,s.jsxs)(n.p,{children:["Sliding windows begin from an offset of the prior windows' beginning rather than its end, and therefore messages may belong to multiple windows. In order to produce sliding windows specify a ",(0,s.jsxs)(n.a,{href:"#slide",children:[(0,s.jsx)(n.code,{children:"slide"})," duration"]}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"back-pressure",children:"Back Pressure"}),"\n",(0,s.jsx)(n.p,{children:"If back pressure is applied to this buffer either due to output services being unavailable or resources being saturated, windows older than the current and last according to the system clock will be dropped in order to prevent unbounded resource usage. This means you should ensure that under the worst case scenario you have enough system memory to store two windows' worth of data at a given time (plus extra for redundancy and other services)."}),"\n",(0,s.jsx)(n.p,{children:"If messages could potentially arrive with event timestamps in the future (according to the system clock) then you should also factor in these extra messages in memory usage estimates."}),"\n",(0,s.jsx)(n.h2,{id:"delivery-guarantees",children:"Delivery Guarantees"}),"\n",(0,s.jsx)(n.p,{children:"This buffer honours the transaction model within Bento in order to ensure that messages are not acknowledged until they are either intentionally dropped or successfully delivered to outputs. However, since messages belonging to an expired window are intentionally dropped there are circumstances where not all messages entering the system will be delivered."}),"\n",(0,s.jsx)(n.p,{children:'When this buffer is configured with a slide duration it is possible for messages to belong to multiple windows, and therefore be delivered multiple times. In this case the first time the message is delivered it will be acked (or nacked) and subsequent deliveries of the same message will be a "best attempt".'}),"\n",(0,s.jsx)(n.p,{children:"During graceful termination if the current window is partially populated with messages they will be nacked such that they are re-consumed the next time the service starts."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(a.Z,{defaultValue:"Counting Passengers at Traffic",values:[{label:"Counting Passengers at Traffic",value:"Counting Passengers at Traffic"}],children:(0,s.jsxs)(r.Z,{value:"Counting Passengers at Traffic",children:[(0,s.jsx)(n.p,{children:"Given a stream of messages relating to cars passing through various traffic lights of the form:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "traffic_light": "cbf2eafc-806e-4067-9211-97be7e42cee3",\n  "created_at": "2021-08-07T09:49:35Z",\n  "registration_plate": "AB1C DEF",\n  "passengers": 3\n}\n'})}),(0,s.jsx)(n.p,{children:"We can use a window buffer in order to create periodic messages summarising the traffic for a period of time of this form:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "traffic_light": "cbf2eafc-806e-4067-9211-97be7e42cee3",\n  "created_at": "2021-08-07T10:00:00Z",\n  "total_cars": 15,\n  "passengers": 43\n}\n'})}),(0,s.jsx)(n.p,{children:"With the following config:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'buffer:\n  system_window:\n    timestamp_mapping: root = this.created_at\n    size: 1h\n\npipeline:\n  processors:\n    # Group messages of the window into batches of common traffic light IDs\n    - group_by_value:\n        value: \'${! json("traffic_light") }\'\n\n    # Reduce each batch to a single message by deleting indexes > 0, and\n    # aggregate the car and passenger counts.\n    - mapping: |\n        root = if batch_index() == 0 {\n          {\n            "traffic_light": this.traffic_light,\n            "created_at": meta("window_end_timestamp"),\n            "total_cars": json("registration_plate").from_all().unique().length(),\n            "passengers": json("passengers").from_all().sum(),\n          }\n        } else { deleted() }\n'})})]})}),"\n",(0,s.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,s.jsx)(n.h3,{id:"timestamp_mapping",children:(0,s.jsx)(n.code,{children:"timestamp_mapping"})}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.a,{href:"/docs/guides/bloblang/about",children:"Bloblang mapping"})," applied to each message during ingestion that provides the timestamp to use for allocating it a window. By default the function ",(0,s.jsx)(n.code,{children:"now()"})," is used in order to generate a fresh timestamp at the time of ingestion (the processing time), whereas this mapping can instead extract a timestamp from the message itself (the event time)."]}),"\n",(0,s.jsxs)(n.p,{children:["The timestamp value assigned to ",(0,s.jsx)(n.code,{children:"root"})," must either be a numerical unix time in seconds (with up to nanosecond precision via decimals), or a string in ISO 8601 format. If the mapping fails or provides an invalid result the message will be dropped (with logging to describe the problem)."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'"root = now()"'})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'# Examples\n\ntimestamp_mapping: root = this.created_at\n\ntimestamp_mapping: root = meta("kafka_timestamp_unix").number()\n'})}),"\n",(0,s.jsx)(n.h3,{id:"size",children:(0,s.jsx)(n.code,{children:"size"})}),"\n",(0,s.jsxs)(n.p,{children:["A duration string describing the size of each window. By default windows are aligned to the zeroth minute and zeroth hour on the UTC clock, meaning windows of 1 hour duration will match the turn of each hour in the day, this can be adjusted with the ",(0,s.jsx)(n.code,{children:"offset"})," field."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"# Examples\n\nsize: 30s\n\nsize: 10m\n"})}),"\n",(0,s.jsx)(n.h3,{id:"slide",children:(0,s.jsx)(n.code,{children:"slide"})}),"\n",(0,s.jsxs)(n.p,{children:["An optional duration string describing by how much time the beginning of each window should be offset from the beginning of the previous, and therefore creates sliding windows instead of tumbling. When specified this duration must be smaller than the ",(0,s.jsx)(n.code,{children:"size"})," of the window."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'""'})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"# Examples\n\nslide: 30s\n\nslide: 10m\n"})}),"\n",(0,s.jsx)(n.h3,{id:"offset",children:(0,s.jsx)(n.code,{children:"offset"})}),"\n",(0,s.jsx)(n.p,{children:"An optional duration string to offset the beginning of each window by, otherwise they are aligned to the zeroth minute and zeroth hour on the UTC clock. The offset cannot be a larger or equal measure to the window size or the slide."}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'""'})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"# Examples\n\noffset: -6h\n\noffset: 30m\n"})}),"\n",(0,s.jsx)(n.h3,{id:"allowed_lateness",children:(0,s.jsx)(n.code,{children:"allowed_lateness"})}),"\n",(0,s.jsx)(n.p,{children:"An optional duration string describing the length of time to wait after a window has ended before flushing it, allowing late arrivals to be included. Since this windowing buffer uses the system clock an allowed lateness can improve the matching of messages when using event time."}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"}),(0,s.jsx)(n.br,{}),"\n","Default: ",(0,s.jsx)(n.code,{children:'""'})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"# Examples\n\nallowed_lateness: 10s\n\nallowed_lateness: 1m\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},85162:function(e,n,t){t.d(n,{Z:function(){return r}});t(67294);var s=t(86010),i={tabItem:"tabItem_Ymn6"},a=t(85893);function r(e){let{children:n,hidden:t,className:r}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.Z)(i.tabItem,r),hidden:t,children:n})}},74866:function(e,n,t){t.d(n,{Z:function(){return y}});var s=t(67294),i=t(86010),a=t(12466),r=t(16550),o=t(20469),l=t(91980),d=t(67392),c=t(50012);function u(e){var n,t;return null!=(n=null==(t=s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:i}}=e;return{value:n,label:t,attributes:s,default:i}}))}(t);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const i=(0,r.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,l._X)(a),(0,s.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(i.location.search);n.set(a,e),i.replace({...i.location,search:n.toString()})}),[a,i])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,a=h(e),[r,l]=(0,s.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:s}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+s.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const i=null!=(n=s.find((e=>e.default)))?n:s[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:a}))),[d,u]=f({queryString:t,groupId:i}),[p,g]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[i,a]=(0,c.Nk)(t);return[i,(0,s.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:i}),w=(()=>{const e=null!=d?d:p;return m({value:e,tabValues:a})?e:null})();(0,o.Z)((()=>{w&&l(w)}),[w]);return{selectedValue:r,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error("Can't select invalid tab value="+e);l(e),u(e),g(e)}),[u,g,a]),tabValues:a}}var g=t(72389),w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},b=t(85893);function x(e){let{className:n,block:t,selectedValue:s,selectValue:r,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.o5)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),i=o[t].value;i!==s&&(d(n),r(i))},u=e=>{var n;let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var s;const n=l.indexOf(e.currentTarget)+1;t=null!=(s=l[n])?s:l[0];break}case"ArrowLeft":{var i;const n=l.indexOf(e.currentTarget)-1;t=null!=(i=l[n])?i:l[l.length-1];break}}null==(n=t)||n.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>l.push(e),onKeyDown:u,onClick:c,...a,className:(0,i.Z)("tabs__item",w.tabItem,null==a?void 0:a.className,{"tabs__item--active":s===n}),children:null!=t?t:n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:i}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===i));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function j(e){const n=p(e);return(0,b.jsxs)("div",{className:(0,i.Z)("tabs-container",w.tabList),children:[(0,b.jsx)(x,{...e,...n}),(0,b.jsx)(v,{...e,...n})]})}function y(e){const n=(0,g.Z)();return(0,b.jsx)(j,{...e,children:u(e.children)},String(n))}},11151:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return r}});var s=t(67294);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);